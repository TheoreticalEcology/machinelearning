{
  "hash": "935d5f9914e43104ac10e348ac5afb1c",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options:\n  chunk_output_type: console\n---\n\n\n# Convolutional Neural Networks (CNN)\n\n\n\n\n\nThe main purpose of convolutional neural networks is image recognition. (Sound can be understood as an image as well!) In a convolutional neural network, we have at least one convolution layer, additional to the normal, fully connected deep neural network layers.\n\nNeurons in a convolution layer are connected only to a small spatially contiguous area of the input layer (*receptive field*). We use this structure (*feature map*) to scan the **entire** features / neurons (e.g. picture). Think of the feature map as a *kernel* or *filter* (or imagine a sliding window with weighted pixels) that is used to scan the image. As the name is already indicating, this operation is a convolution in mathematics. The kernel weights are optimized, but we use the same weights across the entire input neurons (*shared weights*).\n\nThe resulting (hidden) convolutional layer after training is called a *feature map*. You can think of the feature map as a map that shows you where the \"shapes\" expressed by the kernel appear in the input. One kernel / feature map will not be enough, we typically have many shapes that we want to recognize. Thus, the input layer is typically connected to several feature maps, which can be aggregated and followed by a second layer of feature maps, and so on.\n\nYou get one convolution map/layer for each kernel of one convolutional layer.\n\n## Example MNIST\n\nWe will show the use of convolutional neural networks with the MNIST data set. This data set is maybe one of the most famous image data sets. It consists of 60,000 handwritten digits from 0-9.\n\nTo do so, we define a few helper functions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(keras)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\nrotate = function(x){ t(apply(x, 2, rev)) }\n\nimgPlot = function(img, title = \"\"){\n  col = grey.colors(255)\n  image(rotate(img), col = col, xlab = \"\", ylab = \"\", axes = FALSE,\n     main = paste0(\"Label: \", as.character(title)))\n}\n```\n:::\n\n\nThe MNIST data set is so famous that there is an automatic download function in Keras:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = dataset_mnist()\ntrain = data$train\ntest = data$test\n```\n:::\n\n\nLet's visualize a few digits:\n\n\n::: {.cell}\n\n```{.r .cell-code}\noldpar = par(mfrow = c(1, 3))\n.n = sapply(1:3, function(x) imgPlot(train$x[x,,], train$y[x]))\n```\n\n::: {.cell-output-display}\n![](C3-ConvolutionalNeuralNetworks_files/figure-html/chunk_chapter5_11-1.png){width=672}\n:::\n\n```{.r .cell-code}\npar(oldpar)\n```\n:::\n\n\nSimilar to the normal machine learning workflow, we have to scale the pixels (from 0-255) to the range of $[0, 1]$ and one hot encode the response. For scaling the pixels, we will use arrays instead of matrices. Arrays are called tensors in mathematics and a 2D array/tensor is typically called a matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_x = array(train$x/255, c(dim(train$x), 1))\ntest_x = array(test$x/255, c(dim(test$x), 1))\ntrain_y = to_categorical(train$y, 10)\ntest_y = to_categorical(test$y, 10)\n```\n:::\n\n\nThe last dimension denotes the number of channels in the image. In our case we have only one channel because the images are black and white.\n\nMost times, we would have at least 3 color channels, for example RGB (red, green, blue) or HSV (hue, saturation, value), sometimes with several additional dimensions like transparency.\n\nTo build our convolutional model, we have to specify a kernel. In our case, we will use 16 convolutional kernels (filters) of size $2\\times2$. These are 2D kernels because our images are 2D. For movies for example, one would use 3D kernels (the third dimension would correspond to time and not to the color channels).\n\n::: panel-tabset\n## Keras\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel = keras_model_sequential()\nmodel %>%\n layer_conv_2d(input_shape = c(28L, 28L, 1L), filters = 16L,\n               kernel_size = c(2L, 2L), activation = \"relu\") %>%\n layer_max_pooling_2d() %>%\n layer_conv_2d(filters = 16L, kernel_size = c(3L, 3L), activation = \"relu\") %>%\n layer_max_pooling_2d() %>%\n layer_flatten() %>%\n layer_dense(100L, activation = \"relu\") %>%\n layer_dense(10L, activation = \"softmax\")\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel: \"sequential\"\n________________________________________________________________________________\n Layer (type)                       Output Shape                    Param #     \n================================================================================\n conv2d_1 (Conv2D)                  (None, 27, 27, 16)              80          \n max_pooling2d_1 (MaxPooling2D)     (None, 13, 13, 16)              0           \n conv2d (Conv2D)                    (None, 11, 11, 16)              2320        \n max_pooling2d (MaxPooling2D)       (None, 5, 5, 16)                0           \n flatten (Flatten)                  (None, 400)                     0           \n dense_1 (Dense)                    (None, 100)                     40100       \n dense (Dense)                      (None, 10)                      1010        \n================================================================================\nTotal params: 43,510\nTrainable params: 43,510\nNon-trainable params: 0\n________________________________________________________________________________\n```\n:::\n:::\n\n\n## Torch\n\nPrepare/download data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(torch)\nlibrary(torchvision)\ntorch_manual_seed(321L)\nset.seed(123)\n\ntrain_ds = mnist_dataset(\n  \".\",\n  download = TRUE,\n  train = TRUE,\n  transform = transform_to_tensor\n)\n\ntest_ds = mnist_dataset(\n  \".\",\n  download = TRUE,\n  train = FALSE,\n  transform = transform_to_tensor\n)\n```\n:::\n\n\nBuild dataloader:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_dl = dataloader(train_ds, batch_size = 32, shuffle = TRUE)\ntest_dl = dataloader(test_ds, batch_size = 32)\nfirst_batch = train_dl$.iter()\ndf = first_batch$.next()\n\ndf$x$size()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32  1 28 28\n```\n:::\n:::\n\n\nBuild convolutional neural network: We have here to calculate the shapes of our layers on our own:\n\n**We start with our input of shape (batch_size, 1, 28, 28)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample = df$x\nsample$size()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32  1 28 28\n```\n:::\n:::\n\n\n**First convolutional layer has shape (input channel = 1, number of feature maps = 16, kernel size = 2)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconv1 = nn_conv2d(1, 16L, 2L, stride = 1L)\n(sample %>% conv1)$size()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32 16 27 27\n```\n:::\n:::\n\n\nOutput: batch_size = 32, number of feature maps = 16, dimensions of each feature map = $(27 , 27)$ Wit a kernel size of two and stride = 1 we will lose one pixel in each dimension... Questions:\n\n-   What happens if we increase the stride?\n-   What happens if we increase the kernel size?\n\n**Pooling layer summarizes each feature map**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(sample %>% conv1 %>% nnf_max_pool2d(kernel_size = 2L, stride = 2L))$size()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32 16 13 13\n```\n:::\n:::\n\n\nkernel_size = 2L and stride = 2L halfs the pixel dimensions of our image.\n\n**Fully connected layer**\n\nNow we have to flatten our final output of the convolutional neural network model to use a normal fully connected layer, but to do so we have to calculate the number of inputs for the fully connected layer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndims = (sample %>% conv1 %>%\n          nnf_max_pool2d(kernel_size = 2L, stride = 2L))$size()\n# Without the batch size of course.\nfinal = prod(dims[-1]) \nprint(final)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2704\n```\n:::\n\n```{.r .cell-code}\nfc = nn_linear(final, 10L)\n(sample %>% conv1 %>% nnf_max_pool2d(kernel_size = 2L, stride = 2L)\n  %>% torch_flatten(start_dim = 2L) %>% fc)$size()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32 10\n```\n:::\n:::\n\n\nBuild the network:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnet = nn_module(\n  \"mnist\",\n  initialize = function(){\n    self$conv1 = nn_conv2d(1, 16L, 2L)\n    self$conv2 = nn_conv2d(16L, 16L, 3L)\n    self$fc1 = nn_linear(400L, 100L)\n    self$fc2 = nn_linear(100L, 10L)\n  },\n  forward = function(x){\n    x %>%\n      self$conv1() %>%\n      nnf_relu() %>%\n      nnf_max_pool2d(2) %>%\n      self$conv2() %>%\n      nnf_relu() %>%\n      nnf_max_pool2d(2) %>%\n      torch_flatten(start_dim = 2) %>%\n      self$fc1() %>%\n      nnf_relu() %>%\n      self$fc2()\n  }\n)\n```\n:::\n\n:::\n\nWe additionally used a pooling layer for downsizing the resulting feature maps. Without further specification, a $2\\times2$ pooling layer is taken automatically. Pooling layers take the input feature map and divide it into (in our case) parts of $2\\times2$ size. Then the respective pooling operation is executed. For every input map/layer, you get one (downsized) output map/layer.\n\nAs we are using the max pooling layer (there are sever other methods like the mean pooling), only the maximum value of these 4 parts is taken and forwarded further. Example input:\n\n```         \n1   2   |   5   8   |   3   6\n6   5   |   2   4   |   8   1\n------------------------------\n9   4   |   3   7   |   2   5\n0   3   |   2   7   |   4   9\n```\n\nWe use max pooling for every field:\n\n```         \nmax(1, 2, 6, 5)   |   max(5, 8, 2, 4)   |   max(3, 6, 8, 1)\n-----------------------------------------------------------\nmax(9, 4, 0, 3)   |   max(3, 7, 2, 7)   |   max(2, 5, 4, 9)\n```\n\nSo the resulting pooled information is:\n\n```         \n6   |   8   |   8\n------------------\n9   |   7   |   9\n```\n\nIn this example, a $4\\times6$ layer was transformed to a $2\\times3$ layer and thus downsized. This is similar to the biological process called *lateral inhibition* where active neurons inhibit the activity of neighboring neurons. It's a loss of information but often very useful for aggregating information and prevent overfitting.\n\nAfter another convolution and pooling layer, we flatten the output. This means that the following dense layer treats the previous layer as a full layer (so the dense layer is connected to all the weights from the last feature maps). You can think of this as transforming a matrix (2D) into a simple 1D vector. The full vector is then used. After flattening the layer, we can simply use our typical output layer.\n\n::: panel-tabset\n## Keras\n\nThe rest is as usual:\n\nFirst we compile the model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel %>%\n  keras::compile(\n      optimizer = keras::optimizer_adamax(0.01),\n      loss = loss_categorical_crossentropy\n  )\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel: \"sequential\"\n________________________________________________________________________________\n Layer (type)                       Output Shape                    Param #     \n================================================================================\n conv2d_1 (Conv2D)                  (None, 27, 27, 16)              80          \n max_pooling2d_1 (MaxPooling2D)     (None, 13, 13, 16)              0           \n conv2d (Conv2D)                    (None, 11, 11, 16)              2320        \n max_pooling2d (MaxPooling2D)       (None, 5, 5, 16)                0           \n flatten (Flatten)                  (None, 400)                     0           \n dense_1 (Dense)                    (None, 100)                     40100       \n dense (Dense)                      (None, 10)                      1010        \n================================================================================\nTotal params: 43,510\nTrainable params: 43,510\nNon-trainable params: 0\n________________________________________________________________________________\n```\n:::\n:::\n\n\nThen, we train the model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\nlibrary(keras)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\nepochs = 5L\nbatch_size = 32L\nmodel %>%\n  fit(\n    x = train_x, \n    y = train_y,\n    epochs = epochs,\n    batch_size = batch_size,\n    shuffle = TRUE,\n    validation_split = 0.2\n  )\n```\n:::\n\n\n## Torch\n\nTrain model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(torch)\ntorch_manual_seed(321L)\nset.seed(123)\n\nmodel_torch = net()\nopt = optim_adam(params = model_torch$parameters, lr = 0.01)\n\nfor(e in 1:3){\n  losses = c()\n  coro::loop(\n    for(batch in train_dl){\n      opt$zero_grad()\n      pred = model_torch(batch[[1]])\n      loss = nnf_cross_entropy(pred, batch[[2]], reduction = \"mean\")\n      loss$backward()\n      opt$step()\n      losses = c(losses, loss$item())\n    }\n  )\n  cat(sprintf(\"Loss at epoch %d: %3f\\n\", e, mean(losses)))\n}\n```\n:::\n\n\nEvaluation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_torch$eval()\n\ntest_losses = c()\ntotal = 0\ncorrect = 0\n\ncoro::loop(\n  for(batch in test_dl){\n    output = model_torch(batch[[1]])\n    labels = batch[[2]]\n    loss = nnf_cross_entropy(output, labels)\n    test_losses = c(test_losses, loss$item())\n    predicted = torch_max(output$data(), dim = 2)[[2]]\n    total = total + labels$size(1)\n    correct = correct + (predicted == labels)$sum()$item()\n  }\n)\n\nmean(test_losses)\ntest_accuracy =  correct/total\ntest_accuracy\n```\n:::\n\n:::\n\n## Example CIFAR\n\nCIFAR10 is another famous image classification dataset. It consists of ten classes with colored images (see https://www.cs.toronto.edu/\\~kriz/cifar.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(keras)\ndata = keras::dataset_cifar10()\ntrain = data$train\ntest = data$test\nimage = train$x[1,,,]\nimage %>% \n image_to_array() %>%\n `/`(., 255) %>%\n as.raster() %>%\n plot()\n## normalize pixel to 0-1\ntrain_x = array(train$x/255, c(dim(train$x)))\ntest_x = array(test$x/255, c(dim(test$x)))\ntrain_y = to_categorical(train$y, 10)\ntest_y = to_categorical(test$y, 10)\nmodel = keras_model_sequential()\nmodel %>% \n layer_conv_2d(input_shape = c(32L, 32L,3L),filters = 16L, kernel_size = c(2L,2L), activation = \"relu\") %>% \n layer_max_pooling_2d() %>% \n layer_dropout(0.3) %>% \n layer_conv_2d(filters = 16L, kernel_size = c(3L,3L), activation = \"relu\") %>% \n layer_max_pooling_2d() %>% \n layer_flatten() %>% \n layer_dense(10, activation = \"softmax\")\nsummary(model)\nmodel %>% \n compile(\n optimizer = optimizer_adamax(),\n loss = loss_categorical_crossentropy\n )\nearly = callback_early_stopping(patience = 5L)\nepochs = 1L\nbatch_size =20L\nmodel %>% fit(\n x = train_x, \n y = train_y,\n epochs = epochs,\n batch_size = batch_size,\n shuffle = TRUE,\n validation_split = 0.2,\n callbacks = c(early)\n)\n```\n:::\n\n\n## Exercise\n\n::: {.callout-caution icon=\"false\"}\n#### Task: CNN for flower dataset\n\nThe next exercise is based on the flower dataset in the Ecodata package.\n\nFollow the steps above and build your own convolutional neural network.\n\nFinally, submit your predictions to the submission server. If you have extra time, take a look at kaggle and find the flower dataset challenge for specific architectures tailored for this dataset.\n\nTasks:\n\n-   If you are unsure how do it, take a look at the solution and try to make the model more complex (e.g. add convolutional layers, regularization, etc.)\n-   Take a look at this [notebook from kaggle](https://www.kaggle.com/code/rajmehra03/flower-recognition-cnn-keras) , try to copy their architecture (it is the same dataset but upsized (i.e. more pixels, the only difference is the input dimension))\n\nPrepare data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\nlibrary(keras)\n\ntrain = EcoData::dataset_flower()$train/255\ntest = EcoData::dataset_flower()$test/255\nlabels = EcoData::dataset_flower()$labels\n```\n:::\n\n\nPlot flower:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain[100,,,] %>%\n  image_to_array() %>%\n  as.raster() %>%\n  plot()\n```\n\n::: {.cell-output-display}\n![](C3-ConvolutionalNeuralNetworks_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n**Tip:** Take a look at the dataset chapter.\n\n\n<div class='webex-solution'><button>Click here to see the solution for a minimal example</button>\n\n\nBuild model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel = keras_model_sequential()\nmodel %>% \n  layer_conv_2d(filters = 4L, kernel_size = 2L,\n                input_shape = list(80L, 80L, 3L)) %>% \n  layer_max_pooling_2d() %>% \n  layer_flatten() %>% \n  layer_dense(units = 5L, activation = \"softmax\")\n\n### Model fitting ###\n\nmodel %>% \n  compile(loss = loss_categorical_crossentropy, \n          optimizer = optimizer_adamax(learning_rate = 0.01))\n\nmodel %>% \n  fit(x = train, y = keras::k_one_hot(labels, 5L))\n```\n:::\n\n\nPredictions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prediction on training data:\npred = apply(model %>% predict(train), 1, which.max)\nMetrics::accuracy(pred - 1L, labels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9490572\n```\n:::\n\n```{.r .cell-code}\ntable(pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npred\n  1   2   3   4   5 \n530 811 529 509 644 \n```\n:::\n\n```{.r .cell-code}\n# Prediction for the submission server:\npred = model %>% predict(test) %>% apply(1, which.max) - 1L\ntable(pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npred\n  0   1   2   3   4 \n184 425 237 218 236 \n```\n:::\n:::\n\n\nSubmission:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(data.frame(y = pred), file = \"cnn.csv\")\n```\n:::\n\n\n\n</div>\n\n:::\n\n## Advanced Training Techniques\n\n### Data Augmentation\n\nHaving to train a convolutional neural network using very little data is a common problem. Data augmentation helps to artificially increase the number of images.\n\nThe idea is that a convolutional neural network learns specific structures such as edges from images. Rotating, adding noise, and zooming in and out will preserve the overall key structure we are interested in, but the model will see new images and has to search once again for the key structures.\n\nLuckily, it is very easy to use data augmentation in Keras.\n\nTo show this, we will use our flower data set. We have to define a generator object (a specific object which infinitely draws samples from our data set). In the generator we can turn on the data augmentation.\n\n::: panel-tabset\n## Keras\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\nlibrary(keras)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\ndata = EcoData::dataset_flower()\ntrain = data$train/255\nlabels = data$labels\n\nmodel = keras_model_sequential()\nmodel %>%\n  layer_conv_2d(filter = 16L, kernel_size = c(5L, 5L),\n                input_shape = c(80L, 80L, 3L), activation = \"relu\") %>%\n  layer_max_pooling_2d() %>%\n  layer_conv_2d(filter = 32L, kernel_size = c(3L, 3L),\n                activation = \"relu\") %>%\n  layer_max_pooling_2d() %>%\n  layer_conv_2d(filter = 64L, kernel_size = c(3L, 3L),\n                strides = c(2L, 2L), activation = \"relu\") %>%\n  layer_max_pooling_2d() %>%\n  layer_flatten() %>%\n  layer_dropout(0.5) %>%\n  layer_dense(units = 5L, activation = \"softmax\")\n\n  \n# Data augmentation.\naug = image_data_generator(rotation_range = 90, \n                           zoom_range = c(0.3), \n                           horizontal_flip = TRUE, \n                           vertical_flip = TRUE)\n\n# Data preparation / splitting.\nindices = sample.int(nrow(train), 0.1 * nrow(train))\ngenerator = flow_images_from_data(train[-indices,,,],\n                                  k_one_hot(labels[-indices], num_classes = 5L),\n                                  generator = aug,\n                                  batch_size = 25L,\n                                  shuffle = TRUE)\n\ntest = train[indices,,,]\n\n## Training loop with early stopping:\n\n# As we use an iterator (the generator), validation loss is not applicable.\n# An available metric is the normal loss.\nearly = keras::callback_early_stopping(patience = 2L, monitor = \"loss\")\n\nmodel %>%\n\tkeras::compile(loss = loss_categorical_crossentropy,\n\t               optimizer = keras::optimizer_adamax(learning_rate = 0.01))\n\nmodel %>%\n\tfit(generator, epochs = 20L, batch_size = 25L,\n\t    shuffle = TRUE, callbacks = c(early))\n\n# Predictions on the training set:\npred = predict(model, data$train[-indices,,,]) %>% apply(1, which.max) - 1\nMetrics::accuracy(pred, labels[-indices])\ntable(pred)\n\n# Predictions on the holdout / test set:\npred = predict(model, test) %>% apply(1, which.max) - 1\nMetrics::accuracy(pred, labels[indices])\ntable(pred)\n\n# If you want to predict on the holdout for submission, use:\npred = predict(model, EcoData::dataset_flower()$test/255) %>%\n  apply(1, which.max) - 1\ntable(pred)\n```\n:::\n\n\nUsing data augmentation we can artificially increase the number of images.\n\n## Torch\n\nIn Torch, we have to change the transform function (but only for the train dataloader):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(torch)\ntorch_manual_seed(321L)\nset.seed(123)\n\ntrain_transforms = function(img){\n  img %>%\n    transform_to_tensor() %>%\n    transform_random_horizontal_flip(p = 0.3) %>%\n    transform_random_resized_crop(size = c(28L, 28L)) %>%\n    transform_random_vertical_flip(0.3)\n}\n\ntrain_ds = mnist_dataset(\".\", download = TRUE, train = TRUE,\n                         transform = train_transforms)\ntest_ds = mnist_dataset(\".\", download = TRUE, train = FALSE,\n                        transform = transform_to_tensor)\n\ntrain_dl = dataloader(train_ds, batch_size = 100L, shuffle = TRUE)\ntest_dl = dataloader(test_ds, batch_size = 100L)\n\nmodel_torch = net()\nopt = optim_adam(params = model_torch$parameters, lr = 0.01)\n\nfor(e in 1:1){\n  losses = c()\n  coro::loop(\n    for(batch in train_dl){\n      opt$zero_grad()\n      pred = model_torch(batch[[1]])\n      loss = nnf_cross_entropy(pred, batch[[2]], reduction = \"mean\")\n      loss$backward()\n      opt$step()\n      losses = c(losses, loss$item())\n    }\n  )\n  \n  cat(sprintf(\"Loss at epoch %d: %3f\\n\", e, mean(losses)))\n}\n\nmodel_torch$eval()\n\ntest_losses = c()\ntotal = 0\ncorrect = 0\n\ncoro::loop(\n  for(batch in test_dl){\n    output = model_torch(batch[[1]])\n    labels = batch[[2]]\n    loss = nnf_cross_entropy(output, labels)\n    test_losses = c(test_losses, loss$item())\n    predicted = torch_max(output$data(), dim = 2)[[2]]\n    total = total + labels$size(1)\n    correct = correct + (predicted == labels)$sum()$item()\n  }\n)\n\ntest_accuracy =  correct/total\nprint(test_accuracy)\n```\n:::\n\n:::\n\n### Transfer Learning {#sec-transfer}\n\nAnother approach to reduce the necessary number of images or to speed up convergence of the models is the use of transfer learning.\n\nThe main idea of transfer learning is that all the convolutional layers have mainly one task - learning to identify highly correlated neighboring features. This knowledge is then used for new tasks. The convolutional layers learn structures such as edges in images and only the top layer, the dense layer is the actual classifier of the convolutional neural network for a specific task. Thus, one could think that we could only train the top layer as classifier. To do so, it will be confronted by sets of different edges/structures and has to decide the label based on these.\n\nAgain, this sounds very complicated but it is again quite easy with Keras and Torch.\n\n::: panel-tabset\n## Keras\n\nWe will do this now with the CIFAR10 data set, so we have to prepare the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\nlibrary(keras)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\ndata = keras::dataset_cifar10()\ntrain = data$train\ntest = data$test\n\nrm(data)\n\nimage = train$x[5,,,]\nimage %>%\n  image_to_array() %>%\n  `/`(., 255) %>%\n  as.raster() %>%\n  plot()\n```\n\n::: {.cell-output-display}\n![](C3-ConvolutionalNeuralNetworks_files/figure-html/chunk_chapter5_27-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntrain_x = array(train$x/255, c(dim(train$x)))\ntest_x = array(test$x/255, c(dim(test$x)))\ntrain_y = to_categorical(train$y, 10)\ntest_y = to_categorical(test$y, 10)\n\nrm(train, test)\n```\n:::\n\n\nKeras provides download functions for all famous architectures/convolutional neural network models which are already trained on the imagenet data set (another famous data set). These trained networks come already without their top layer, so we have to set include_top to false and change the input shape.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndensenet = application_densenet201(include_top = FALSE,\n                                   input_shape  = c(32L, 32L, 3L))\n```\n:::\n\n\nNow, we will not use a sequential model but just a \"keras_model\" where we can specify the inputs and outputs. Thereby, the output is our own top layer, but the inputs are the densenet inputs, as these are already pre-trained.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel = keras::keras_model(\n  inputs = densenet$input,\n  outputs = layer_flatten(\n    layer_dense(densenet$output, units = 10L, activation = \"softmax\")\n  )\n)\n\n# Notice that this snippet just creates one (!) new layer.\n# The densenet's inputs are connected with the model's inputs.\n# The densenet's outputs are connected with our own layer (with 10 nodes).\n# This layer is also the output layer of the model.\n```\n:::\n\n\nIn the next step we want to freeze all layers except for our own last layer. Freezing means that these are not trained: We do not want to train the complete model, we only want to train the last layer. You can check the number of trainable weights via summary(model).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel %>% freeze_weights(to = length(model$layers) - 1)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModel: \"model\"\n________________________________________________________________________________\n Layer (type)         Output Shape   Param #  Connected to           Trainable  \n================================================================================\n input_1 (InputLayer)  [(None, 32, 3  0       []                     N          \n                      2, 3)]                                                    \n zero_padding2d (Zero  (None, 38, 38  0       ['input_1[0][0]']      N          \n Padding2D)           , 3)                                                      \n conv1/conv (Conv2D)  (None, 16, 16  9408     ['zero_padding2d[0][0  N          \n                      , 64)                   ]']                               \n conv1/bn (BatchNorma  (None, 16, 16  256     ['conv1/conv[0][0]']   N          \n lization)            , 64)                                                     \n conv1/relu (Activati  (None, 16, 16  0       ['conv1/bn[0][0]']     N          \n on)                  , 64)                                                     \n zero_padding2d_1 (Ze  (None, 18, 18  0       ['conv1/relu[0][0]']   N          \n roPadding2D)         , 64)                                                     \n pool1 (MaxPooling2D)  (None, 8, 8,   0       ['zero_padding2d_1[0]  N          \n                      64)                     [0]']                             \n conv2_block1_0_bn (B  (None, 8, 8,   256     ['pool1[0][0]']        N          \n atchNormalization)   64)                                                       \n conv2_block1_0_relu   (None, 8, 8,   0       ['conv2_block1_0_bn[0  N          \n (Activation)         64)                     ][0]']                            \n conv2_block1_1_conv   (None, 8, 8,   8192    ['conv2_block1_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block1_1_bn (B  (None, 8, 8,   512     ['conv2_block1_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block1_1_relu   (None, 8, 8,   0       ['conv2_block1_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block1_2_conv   (None, 8, 8,   36864   ['conv2_block1_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block1_concat   (None, 8, 8,   0       ['pool1[0][0]',        N          \n (Concatenate)        96)                      'conv2_block1_2_conv             \n                                              [0][0]']                          \n conv2_block2_0_bn (B  (None, 8, 8,   384     ['conv2_block1_concat  N          \n atchNormalization)   96)                     [0][0]']                          \n conv2_block2_0_relu   (None, 8, 8,   0       ['conv2_block2_0_bn[0  N          \n (Activation)         96)                     ][0]']                            \n conv2_block2_1_conv   (None, 8, 8,   12288   ['conv2_block2_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block2_1_bn (B  (None, 8, 8,   512     ['conv2_block2_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block2_1_relu   (None, 8, 8,   0       ['conv2_block2_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block2_2_conv   (None, 8, 8,   36864   ['conv2_block2_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block2_concat   (None, 8, 8,   0       ['conv2_block1_concat  N          \n (Concatenate)        128)                    [0][0]',                          \n                                               'conv2_block2_2_conv             \n                                              [0][0]']                          \n conv2_block3_0_bn (B  (None, 8, 8,   512     ['conv2_block2_concat  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block3_0_relu   (None, 8, 8,   0       ['conv2_block3_0_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block3_1_conv   (None, 8, 8,   16384   ['conv2_block3_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block3_1_bn (B  (None, 8, 8,   512     ['conv2_block3_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block3_1_relu   (None, 8, 8,   0       ['conv2_block3_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block3_2_conv   (None, 8, 8,   36864   ['conv2_block3_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block3_concat   (None, 8, 8,   0       ['conv2_block2_concat  N          \n (Concatenate)        160)                    [0][0]',                          \n                                               'conv2_block3_2_conv             \n                                              [0][0]']                          \n conv2_block4_0_bn (B  (None, 8, 8,   640     ['conv2_block3_concat  N          \n atchNormalization)   160)                    [0][0]']                          \n conv2_block4_0_relu   (None, 8, 8,   0       ['conv2_block4_0_bn[0  N          \n (Activation)         160)                    ][0]']                            \n conv2_block4_1_conv   (None, 8, 8,   20480   ['conv2_block4_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block4_1_bn (B  (None, 8, 8,   512     ['conv2_block4_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block4_1_relu   (None, 8, 8,   0       ['conv2_block4_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block4_2_conv   (None, 8, 8,   36864   ['conv2_block4_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block4_concat   (None, 8, 8,   0       ['conv2_block3_concat  N          \n (Concatenate)        192)                    [0][0]',                          \n                                               'conv2_block4_2_conv             \n                                              [0][0]']                          \n conv2_block5_0_bn (B  (None, 8, 8,   768     ['conv2_block4_concat  N          \n atchNormalization)   192)                    [0][0]']                          \n conv2_block5_0_relu   (None, 8, 8,   0       ['conv2_block5_0_bn[0  N          \n (Activation)         192)                    ][0]']                            \n conv2_block5_1_conv   (None, 8, 8,   24576   ['conv2_block5_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block5_1_bn (B  (None, 8, 8,   512     ['conv2_block5_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block5_1_relu   (None, 8, 8,   0       ['conv2_block5_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block5_2_conv   (None, 8, 8,   36864   ['conv2_block5_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block5_concat   (None, 8, 8,   0       ['conv2_block4_concat  N          \n (Concatenate)        224)                    [0][0]',                          \n                                               'conv2_block5_2_conv             \n                                              [0][0]']                          \n conv2_block6_0_bn (B  (None, 8, 8,   896     ['conv2_block5_concat  N          \n atchNormalization)   224)                    [0][0]']                          \n conv2_block6_0_relu   (None, 8, 8,   0       ['conv2_block6_0_bn[0  N          \n (Activation)         224)                    ][0]']                            \n conv2_block6_1_conv   (None, 8, 8,   28672   ['conv2_block6_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv2_block6_1_bn (B  (None, 8, 8,   512     ['conv2_block6_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv2_block6_1_relu   (None, 8, 8,   0       ['conv2_block6_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv2_block6_2_conv   (None, 8, 8,   36864   ['conv2_block6_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv2_block6_concat   (None, 8, 8,   0       ['conv2_block5_concat  N          \n (Concatenate)        256)                    [0][0]',                          \n                                               'conv2_block6_2_conv             \n                                              [0][0]']                          \n pool2_bn (BatchNorma  (None, 8, 8,   1024    ['conv2_block6_concat  N          \n lization)            256)                    [0][0]']                          \n pool2_relu (Activati  (None, 8, 8,   0       ['pool2_bn[0][0]']     N          \n on)                  256)                                                      \n pool2_conv (Conv2D)  (None, 8, 8,   32768    ['pool2_relu[0][0]']   N          \n                      128)                                                      \n pool2_pool (AverageP  (None, 4, 4,   0       ['pool2_conv[0][0]']   N          \n ooling2D)            128)                                                      \n conv3_block1_0_bn (B  (None, 4, 4,   512     ['pool2_pool[0][0]']   N          \n atchNormalization)   128)                                                      \n conv3_block1_0_relu   (None, 4, 4,   0       ['conv3_block1_0_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block1_1_conv   (None, 4, 4,   16384   ['conv3_block1_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block1_1_bn (B  (None, 4, 4,   512     ['conv3_block1_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block1_1_relu   (None, 4, 4,   0       ['conv3_block1_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block1_2_conv   (None, 4, 4,   36864   ['conv3_block1_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block1_concat   (None, 4, 4,   0       ['pool2_pool[0][0]',   N          \n (Concatenate)        160)                     'conv3_block1_2_conv             \n                                              [0][0]']                          \n conv3_block2_0_bn (B  (None, 4, 4,   640     ['conv3_block1_concat  N          \n atchNormalization)   160)                    [0][0]']                          \n conv3_block2_0_relu   (None, 4, 4,   0       ['conv3_block2_0_bn[0  N          \n (Activation)         160)                    ][0]']                            \n conv3_block2_1_conv   (None, 4, 4,   20480   ['conv3_block2_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block2_1_bn (B  (None, 4, 4,   512     ['conv3_block2_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block2_1_relu   (None, 4, 4,   0       ['conv3_block2_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block2_2_conv   (None, 4, 4,   36864   ['conv3_block2_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block2_concat   (None, 4, 4,   0       ['conv3_block1_concat  N          \n (Concatenate)        192)                    [0][0]',                          \n                                               'conv3_block2_2_conv             \n                                              [0][0]']                          \n conv3_block3_0_bn (B  (None, 4, 4,   768     ['conv3_block2_concat  N          \n atchNormalization)   192)                    [0][0]']                          \n conv3_block3_0_relu   (None, 4, 4,   0       ['conv3_block3_0_bn[0  N          \n (Activation)         192)                    ][0]']                            \n conv3_block3_1_conv   (None, 4, 4,   24576   ['conv3_block3_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block3_1_bn (B  (None, 4, 4,   512     ['conv3_block3_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block3_1_relu   (None, 4, 4,   0       ['conv3_block3_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block3_2_conv   (None, 4, 4,   36864   ['conv3_block3_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block3_concat   (None, 4, 4,   0       ['conv3_block2_concat  N          \n (Concatenate)        224)                    [0][0]',                          \n                                               'conv3_block3_2_conv             \n                                              [0][0]']                          \n conv3_block4_0_bn (B  (None, 4, 4,   896     ['conv3_block3_concat  N          \n atchNormalization)   224)                    [0][0]']                          \n conv3_block4_0_relu   (None, 4, 4,   0       ['conv3_block4_0_bn[0  N          \n (Activation)         224)                    ][0]']                            \n conv3_block4_1_conv   (None, 4, 4,   28672   ['conv3_block4_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block4_1_bn (B  (None, 4, 4,   512     ['conv3_block4_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block4_1_relu   (None, 4, 4,   0       ['conv3_block4_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block4_2_conv   (None, 4, 4,   36864   ['conv3_block4_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block4_concat   (None, 4, 4,   0       ['conv3_block3_concat  N          \n (Concatenate)        256)                    [0][0]',                          \n                                               'conv3_block4_2_conv             \n                                              [0][0]']                          \n conv3_block5_0_bn (B  (None, 4, 4,   1024    ['conv3_block4_concat  N          \n atchNormalization)   256)                    [0][0]']                          \n conv3_block5_0_relu   (None, 4, 4,   0       ['conv3_block5_0_bn[0  N          \n (Activation)         256)                    ][0]']                            \n conv3_block5_1_conv   (None, 4, 4,   32768   ['conv3_block5_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block5_1_bn (B  (None, 4, 4,   512     ['conv3_block5_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block5_1_relu   (None, 4, 4,   0       ['conv3_block5_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block5_2_conv   (None, 4, 4,   36864   ['conv3_block5_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block5_concat   (None, 4, 4,   0       ['conv3_block4_concat  N          \n (Concatenate)        288)                    [0][0]',                          \n                                               'conv3_block5_2_conv             \n                                              [0][0]']                          \n conv3_block6_0_bn (B  (None, 4, 4,   1152    ['conv3_block5_concat  N          \n atchNormalization)   288)                    [0][0]']                          \n conv3_block6_0_relu   (None, 4, 4,   0       ['conv3_block6_0_bn[0  N          \n (Activation)         288)                    ][0]']                            \n conv3_block6_1_conv   (None, 4, 4,   36864   ['conv3_block6_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block6_1_bn (B  (None, 4, 4,   512     ['conv3_block6_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block6_1_relu   (None, 4, 4,   0       ['conv3_block6_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block6_2_conv   (None, 4, 4,   36864   ['conv3_block6_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block6_concat   (None, 4, 4,   0       ['conv3_block5_concat  N          \n (Concatenate)        320)                    [0][0]',                          \n                                               'conv3_block6_2_conv             \n                                              [0][0]']                          \n conv3_block7_0_bn (B  (None, 4, 4,   1280    ['conv3_block6_concat  N          \n atchNormalization)   320)                    [0][0]']                          \n conv3_block7_0_relu   (None, 4, 4,   0       ['conv3_block7_0_bn[0  N          \n (Activation)         320)                    ][0]']                            \n conv3_block7_1_conv   (None, 4, 4,   40960   ['conv3_block7_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block7_1_bn (B  (None, 4, 4,   512     ['conv3_block7_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block7_1_relu   (None, 4, 4,   0       ['conv3_block7_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block7_2_conv   (None, 4, 4,   36864   ['conv3_block7_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block7_concat   (None, 4, 4,   0       ['conv3_block6_concat  N          \n (Concatenate)        352)                    [0][0]',                          \n                                               'conv3_block7_2_conv             \n                                              [0][0]']                          \n conv3_block8_0_bn (B  (None, 4, 4,   1408    ['conv3_block7_concat  N          \n atchNormalization)   352)                    [0][0]']                          \n conv3_block8_0_relu   (None, 4, 4,   0       ['conv3_block8_0_bn[0  N          \n (Activation)         352)                    ][0]']                            \n conv3_block8_1_conv   (None, 4, 4,   45056   ['conv3_block8_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block8_1_bn (B  (None, 4, 4,   512     ['conv3_block8_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block8_1_relu   (None, 4, 4,   0       ['conv3_block8_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block8_2_conv   (None, 4, 4,   36864   ['conv3_block8_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block8_concat   (None, 4, 4,   0       ['conv3_block7_concat  N          \n (Concatenate)        384)                    [0][0]',                          \n                                               'conv3_block8_2_conv             \n                                              [0][0]']                          \n conv3_block9_0_bn (B  (None, 4, 4,   1536    ['conv3_block8_concat  N          \n atchNormalization)   384)                    [0][0]']                          \n conv3_block9_0_relu   (None, 4, 4,   0       ['conv3_block9_0_bn[0  N          \n (Activation)         384)                    ][0]']                            \n conv3_block9_1_conv   (None, 4, 4,   49152   ['conv3_block9_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv3_block9_1_bn (B  (None, 4, 4,   512     ['conv3_block9_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv3_block9_1_relu   (None, 4, 4,   0       ['conv3_block9_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv3_block9_2_conv   (None, 4, 4,   36864   ['conv3_block9_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv3_block9_concat   (None, 4, 4,   0       ['conv3_block8_concat  N          \n (Concatenate)        416)                    [0][0]',                          \n                                               'conv3_block9_2_conv             \n                                              [0][0]']                          \n conv3_block10_0_bn (  (None, 4, 4,   1664    ['conv3_block9_concat  N          \n BatchNormalization)  416)                    [0][0]']                          \n conv3_block10_0_relu  (None, 4, 4,   0       ['conv3_block10_0_bn[  N          \n  (Activation)        416)                    0][0]']                           \n conv3_block10_1_conv  (None, 4, 4,   53248   ['conv3_block10_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv3_block10_1_bn (  (None, 4, 4,   512     ['conv3_block10_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv3_block10_1_relu  (None, 4, 4,   0       ['conv3_block10_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv3_block10_2_conv  (None, 4, 4,   36864   ['conv3_block10_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv3_block10_concat  (None, 4, 4,   0       ['conv3_block9_concat  N          \n  (Concatenate)       448)                    [0][0]',                          \n                                               'conv3_block10_2_con             \n                                              v[0][0]']                         \n conv3_block11_0_bn (  (None, 4, 4,   1792    ['conv3_block10_conca  N          \n BatchNormalization)  448)                    t[0][0]']                         \n conv3_block11_0_relu  (None, 4, 4,   0       ['conv3_block11_0_bn[  N          \n  (Activation)        448)                    0][0]']                           \n conv3_block11_1_conv  (None, 4, 4,   57344   ['conv3_block11_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv3_block11_1_bn (  (None, 4, 4,   512     ['conv3_block11_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv3_block11_1_relu  (None, 4, 4,   0       ['conv3_block11_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv3_block11_2_conv  (None, 4, 4,   36864   ['conv3_block11_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv3_block11_concat  (None, 4, 4,   0       ['conv3_block10_conca  N          \n  (Concatenate)       480)                    t[0][0]',                         \n                                               'conv3_block11_2_con             \n                                              v[0][0]']                         \n conv3_block12_0_bn (  (None, 4, 4,   1920    ['conv3_block11_conca  N          \n BatchNormalization)  480)                    t[0][0]']                         \n conv3_block12_0_relu  (None, 4, 4,   0       ['conv3_block12_0_bn[  N          \n  (Activation)        480)                    0][0]']                           \n conv3_block12_1_conv  (None, 4, 4,   61440   ['conv3_block12_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv3_block12_1_bn (  (None, 4, 4,   512     ['conv3_block12_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv3_block12_1_relu  (None, 4, 4,   0       ['conv3_block12_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv3_block12_2_conv  (None, 4, 4,   36864   ['conv3_block12_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv3_block12_concat  (None, 4, 4,   0       ['conv3_block11_conca  N          \n  (Concatenate)       512)                    t[0][0]',                         \n                                               'conv3_block12_2_con             \n                                              v[0][0]']                         \n pool3_bn (BatchNorma  (None, 4, 4,   2048    ['conv3_block12_conca  N          \n lization)            512)                    t[0][0]']                         \n pool3_relu (Activati  (None, 4, 4,   0       ['pool3_bn[0][0]']     N          \n on)                  512)                                                      \n pool3_conv (Conv2D)  (None, 4, 4,   131072   ['pool3_relu[0][0]']   N          \n                      256)                                                      \n pool3_pool (AverageP  (None, 2, 2,   0       ['pool3_conv[0][0]']   N          \n ooling2D)            256)                                                      \n conv4_block1_0_bn (B  (None, 2, 2,   1024    ['pool3_pool[0][0]']   N          \n atchNormalization)   256)                                                      \n conv4_block1_0_relu   (None, 2, 2,   0       ['conv4_block1_0_bn[0  N          \n (Activation)         256)                    ][0]']                            \n conv4_block1_1_conv   (None, 2, 2,   32768   ['conv4_block1_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block1_1_bn (B  (None, 2, 2,   512     ['conv4_block1_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block1_1_relu   (None, 2, 2,   0       ['conv4_block1_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block1_2_conv   (None, 2, 2,   36864   ['conv4_block1_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block1_concat   (None, 2, 2,   0       ['pool3_pool[0][0]',   N          \n (Concatenate)        288)                     'conv4_block1_2_conv             \n                                              [0][0]']                          \n conv4_block2_0_bn (B  (None, 2, 2,   1152    ['conv4_block1_concat  N          \n atchNormalization)   288)                    [0][0]']                          \n conv4_block2_0_relu   (None, 2, 2,   0       ['conv4_block2_0_bn[0  N          \n (Activation)         288)                    ][0]']                            \n conv4_block2_1_conv   (None, 2, 2,   36864   ['conv4_block2_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block2_1_bn (B  (None, 2, 2,   512     ['conv4_block2_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block2_1_relu   (None, 2, 2,   0       ['conv4_block2_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block2_2_conv   (None, 2, 2,   36864   ['conv4_block2_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block2_concat   (None, 2, 2,   0       ['conv4_block1_concat  N          \n (Concatenate)        320)                    [0][0]',                          \n                                               'conv4_block2_2_conv             \n                                              [0][0]']                          \n conv4_block3_0_bn (B  (None, 2, 2,   1280    ['conv4_block2_concat  N          \n atchNormalization)   320)                    [0][0]']                          \n conv4_block3_0_relu   (None, 2, 2,   0       ['conv4_block3_0_bn[0  N          \n (Activation)         320)                    ][0]']                            \n conv4_block3_1_conv   (None, 2, 2,   40960   ['conv4_block3_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block3_1_bn (B  (None, 2, 2,   512     ['conv4_block3_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block3_1_relu   (None, 2, 2,   0       ['conv4_block3_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block3_2_conv   (None, 2, 2,   36864   ['conv4_block3_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block3_concat   (None, 2, 2,   0       ['conv4_block2_concat  N          \n (Concatenate)        352)                    [0][0]',                          \n                                               'conv4_block3_2_conv             \n                                              [0][0]']                          \n conv4_block4_0_bn (B  (None, 2, 2,   1408    ['conv4_block3_concat  N          \n atchNormalization)   352)                    [0][0]']                          \n conv4_block4_0_relu   (None, 2, 2,   0       ['conv4_block4_0_bn[0  N          \n (Activation)         352)                    ][0]']                            \n conv4_block4_1_conv   (None, 2, 2,   45056   ['conv4_block4_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block4_1_bn (B  (None, 2, 2,   512     ['conv4_block4_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block4_1_relu   (None, 2, 2,   0       ['conv4_block4_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block4_2_conv   (None, 2, 2,   36864   ['conv4_block4_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block4_concat   (None, 2, 2,   0       ['conv4_block3_concat  N          \n (Concatenate)        384)                    [0][0]',                          \n                                               'conv4_block4_2_conv             \n                                              [0][0]']                          \n conv4_block5_0_bn (B  (None, 2, 2,   1536    ['conv4_block4_concat  N          \n atchNormalization)   384)                    [0][0]']                          \n conv4_block5_0_relu   (None, 2, 2,   0       ['conv4_block5_0_bn[0  N          \n (Activation)         384)                    ][0]']                            \n conv4_block5_1_conv   (None, 2, 2,   49152   ['conv4_block5_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block5_1_bn (B  (None, 2, 2,   512     ['conv4_block5_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block5_1_relu   (None, 2, 2,   0       ['conv4_block5_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block5_2_conv   (None, 2, 2,   36864   ['conv4_block5_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block5_concat   (None, 2, 2,   0       ['conv4_block4_concat  N          \n (Concatenate)        416)                    [0][0]',                          \n                                               'conv4_block5_2_conv             \n                                              [0][0]']                          \n conv4_block6_0_bn (B  (None, 2, 2,   1664    ['conv4_block5_concat  N          \n atchNormalization)   416)                    [0][0]']                          \n conv4_block6_0_relu   (None, 2, 2,   0       ['conv4_block6_0_bn[0  N          \n (Activation)         416)                    ][0]']                            \n conv4_block6_1_conv   (None, 2, 2,   53248   ['conv4_block6_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block6_1_bn (B  (None, 2, 2,   512     ['conv4_block6_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block6_1_relu   (None, 2, 2,   0       ['conv4_block6_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block6_2_conv   (None, 2, 2,   36864   ['conv4_block6_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block6_concat   (None, 2, 2,   0       ['conv4_block5_concat  N          \n (Concatenate)        448)                    [0][0]',                          \n                                               'conv4_block6_2_conv             \n                                              [0][0]']                          \n conv4_block7_0_bn (B  (None, 2, 2,   1792    ['conv4_block6_concat  N          \n atchNormalization)   448)                    [0][0]']                          \n conv4_block7_0_relu   (None, 2, 2,   0       ['conv4_block7_0_bn[0  N          \n (Activation)         448)                    ][0]']                            \n conv4_block7_1_conv   (None, 2, 2,   57344   ['conv4_block7_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block7_1_bn (B  (None, 2, 2,   512     ['conv4_block7_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block7_1_relu   (None, 2, 2,   0       ['conv4_block7_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block7_2_conv   (None, 2, 2,   36864   ['conv4_block7_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block7_concat   (None, 2, 2,   0       ['conv4_block6_concat  N          \n (Concatenate)        480)                    [0][0]',                          \n                                               'conv4_block7_2_conv             \n                                              [0][0]']                          \n conv4_block8_0_bn (B  (None, 2, 2,   1920    ['conv4_block7_concat  N          \n atchNormalization)   480)                    [0][0]']                          \n conv4_block8_0_relu   (None, 2, 2,   0       ['conv4_block8_0_bn[0  N          \n (Activation)         480)                    ][0]']                            \n conv4_block8_1_conv   (None, 2, 2,   61440   ['conv4_block8_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block8_1_bn (B  (None, 2, 2,   512     ['conv4_block8_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block8_1_relu   (None, 2, 2,   0       ['conv4_block8_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block8_2_conv   (None, 2, 2,   36864   ['conv4_block8_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block8_concat   (None, 2, 2,   0       ['conv4_block7_concat  N          \n (Concatenate)        512)                    [0][0]',                          \n                                               'conv4_block8_2_conv             \n                                              [0][0]']                          \n conv4_block9_0_bn (B  (None, 2, 2,   2048    ['conv4_block8_concat  N          \n atchNormalization)   512)                    [0][0]']                          \n conv4_block9_0_relu   (None, 2, 2,   0       ['conv4_block9_0_bn[0  N          \n (Activation)         512)                    ][0]']                            \n conv4_block9_1_conv   (None, 2, 2,   65536   ['conv4_block9_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv4_block9_1_bn (B  (None, 2, 2,   512     ['conv4_block9_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv4_block9_1_relu   (None, 2, 2,   0       ['conv4_block9_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv4_block9_2_conv   (None, 2, 2,   36864   ['conv4_block9_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv4_block9_concat   (None, 2, 2,   0       ['conv4_block8_concat  N          \n (Concatenate)        544)                    [0][0]',                          \n                                               'conv4_block9_2_conv             \n                                              [0][0]']                          \n conv4_block10_0_bn (  (None, 2, 2,   2176    ['conv4_block9_concat  N          \n BatchNormalization)  544)                    [0][0]']                          \n conv4_block10_0_relu  (None, 2, 2,   0       ['conv4_block10_0_bn[  N          \n  (Activation)        544)                    0][0]']                           \n conv4_block10_1_conv  (None, 2, 2,   69632   ['conv4_block10_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block10_1_bn (  (None, 2, 2,   512     ['conv4_block10_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block10_1_relu  (None, 2, 2,   0       ['conv4_block10_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block10_2_conv  (None, 2, 2,   36864   ['conv4_block10_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block10_concat  (None, 2, 2,   0       ['conv4_block9_concat  N          \n  (Concatenate)       576)                    [0][0]',                          \n                                               'conv4_block10_2_con             \n                                              v[0][0]']                         \n conv4_block11_0_bn (  (None, 2, 2,   2304    ['conv4_block10_conca  N          \n BatchNormalization)  576)                    t[0][0]']                         \n conv4_block11_0_relu  (None, 2, 2,   0       ['conv4_block11_0_bn[  N          \n  (Activation)        576)                    0][0]']                           \n conv4_block11_1_conv  (None, 2, 2,   73728   ['conv4_block11_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block11_1_bn (  (None, 2, 2,   512     ['conv4_block11_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block11_1_relu  (None, 2, 2,   0       ['conv4_block11_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block11_2_conv  (None, 2, 2,   36864   ['conv4_block11_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block11_concat  (None, 2, 2,   0       ['conv4_block10_conca  N          \n  (Concatenate)       608)                    t[0][0]',                         \n                                               'conv4_block11_2_con             \n                                              v[0][0]']                         \n conv4_block12_0_bn (  (None, 2, 2,   2432    ['conv4_block11_conca  N          \n BatchNormalization)  608)                    t[0][0]']                         \n conv4_block12_0_relu  (None, 2, 2,   0       ['conv4_block12_0_bn[  N          \n  (Activation)        608)                    0][0]']                           \n conv4_block12_1_conv  (None, 2, 2,   77824   ['conv4_block12_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block12_1_bn (  (None, 2, 2,   512     ['conv4_block12_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block12_1_relu  (None, 2, 2,   0       ['conv4_block12_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block12_2_conv  (None, 2, 2,   36864   ['conv4_block12_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block12_concat  (None, 2, 2,   0       ['conv4_block11_conca  N          \n  (Concatenate)       640)                    t[0][0]',                         \n                                               'conv4_block12_2_con             \n                                              v[0][0]']                         \n conv4_block13_0_bn (  (None, 2, 2,   2560    ['conv4_block12_conca  N          \n BatchNormalization)  640)                    t[0][0]']                         \n conv4_block13_0_relu  (None, 2, 2,   0       ['conv4_block13_0_bn[  N          \n  (Activation)        640)                    0][0]']                           \n conv4_block13_1_conv  (None, 2, 2,   81920   ['conv4_block13_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block13_1_bn (  (None, 2, 2,   512     ['conv4_block13_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block13_1_relu  (None, 2, 2,   0       ['conv4_block13_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block13_2_conv  (None, 2, 2,   36864   ['conv4_block13_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block13_concat  (None, 2, 2,   0       ['conv4_block12_conca  N          \n  (Concatenate)       672)                    t[0][0]',                         \n                                               'conv4_block13_2_con             \n                                              v[0][0]']                         \n conv4_block14_0_bn (  (None, 2, 2,   2688    ['conv4_block13_conca  N          \n BatchNormalization)  672)                    t[0][0]']                         \n conv4_block14_0_relu  (None, 2, 2,   0       ['conv4_block14_0_bn[  N          \n  (Activation)        672)                    0][0]']                           \n conv4_block14_1_conv  (None, 2, 2,   86016   ['conv4_block14_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block14_1_bn (  (None, 2, 2,   512     ['conv4_block14_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block14_1_relu  (None, 2, 2,   0       ['conv4_block14_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block14_2_conv  (None, 2, 2,   36864   ['conv4_block14_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block14_concat  (None, 2, 2,   0       ['conv4_block13_conca  N          \n  (Concatenate)       704)                    t[0][0]',                         \n                                               'conv4_block14_2_con             \n                                              v[0][0]']                         \n conv4_block15_0_bn (  (None, 2, 2,   2816    ['conv4_block14_conca  N          \n BatchNormalization)  704)                    t[0][0]']                         \n conv4_block15_0_relu  (None, 2, 2,   0       ['conv4_block15_0_bn[  N          \n  (Activation)        704)                    0][0]']                           \n conv4_block15_1_conv  (None, 2, 2,   90112   ['conv4_block15_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block15_1_bn (  (None, 2, 2,   512     ['conv4_block15_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block15_1_relu  (None, 2, 2,   0       ['conv4_block15_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block15_2_conv  (None, 2, 2,   36864   ['conv4_block15_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block15_concat  (None, 2, 2,   0       ['conv4_block14_conca  N          \n  (Concatenate)       736)                    t[0][0]',                         \n                                               'conv4_block15_2_con             \n                                              v[0][0]']                         \n conv4_block16_0_bn (  (None, 2, 2,   2944    ['conv4_block15_conca  N          \n BatchNormalization)  736)                    t[0][0]']                         \n conv4_block16_0_relu  (None, 2, 2,   0       ['conv4_block16_0_bn[  N          \n  (Activation)        736)                    0][0]']                           \n conv4_block16_1_conv  (None, 2, 2,   94208   ['conv4_block16_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block16_1_bn (  (None, 2, 2,   512     ['conv4_block16_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block16_1_relu  (None, 2, 2,   0       ['conv4_block16_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block16_2_conv  (None, 2, 2,   36864   ['conv4_block16_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block16_concat  (None, 2, 2,   0       ['conv4_block15_conca  N          \n  (Concatenate)       768)                    t[0][0]',                         \n                                               'conv4_block16_2_con             \n                                              v[0][0]']                         \n conv4_block17_0_bn (  (None, 2, 2,   3072    ['conv4_block16_conca  N          \n BatchNormalization)  768)                    t[0][0]']                         \n conv4_block17_0_relu  (None, 2, 2,   0       ['conv4_block17_0_bn[  N          \n  (Activation)        768)                    0][0]']                           \n conv4_block17_1_conv  (None, 2, 2,   98304   ['conv4_block17_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block17_1_bn (  (None, 2, 2,   512     ['conv4_block17_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block17_1_relu  (None, 2, 2,   0       ['conv4_block17_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block17_2_conv  (None, 2, 2,   36864   ['conv4_block17_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block17_concat  (None, 2, 2,   0       ['conv4_block16_conca  N          \n  (Concatenate)       800)                    t[0][0]',                         \n                                               'conv4_block17_2_con             \n                                              v[0][0]']                         \n conv4_block18_0_bn (  (None, 2, 2,   3200    ['conv4_block17_conca  N          \n BatchNormalization)  800)                    t[0][0]']                         \n conv4_block18_0_relu  (None, 2, 2,   0       ['conv4_block18_0_bn[  N          \n  (Activation)        800)                    0][0]']                           \n conv4_block18_1_conv  (None, 2, 2,   102400  ['conv4_block18_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block18_1_bn (  (None, 2, 2,   512     ['conv4_block18_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block18_1_relu  (None, 2, 2,   0       ['conv4_block18_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block18_2_conv  (None, 2, 2,   36864   ['conv4_block18_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block18_concat  (None, 2, 2,   0       ['conv4_block17_conca  N          \n  (Concatenate)       832)                    t[0][0]',                         \n                                               'conv4_block18_2_con             \n                                              v[0][0]']                         \n conv4_block19_0_bn (  (None, 2, 2,   3328    ['conv4_block18_conca  N          \n BatchNormalization)  832)                    t[0][0]']                         \n conv4_block19_0_relu  (None, 2, 2,   0       ['conv4_block19_0_bn[  N          \n  (Activation)        832)                    0][0]']                           \n conv4_block19_1_conv  (None, 2, 2,   106496  ['conv4_block19_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block19_1_bn (  (None, 2, 2,   512     ['conv4_block19_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block19_1_relu  (None, 2, 2,   0       ['conv4_block19_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block19_2_conv  (None, 2, 2,   36864   ['conv4_block19_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block19_concat  (None, 2, 2,   0       ['conv4_block18_conca  N          \n  (Concatenate)       864)                    t[0][0]',                         \n                                               'conv4_block19_2_con             \n                                              v[0][0]']                         \n conv4_block20_0_bn (  (None, 2, 2,   3456    ['conv4_block19_conca  N          \n BatchNormalization)  864)                    t[0][0]']                         \n conv4_block20_0_relu  (None, 2, 2,   0       ['conv4_block20_0_bn[  N          \n  (Activation)        864)                    0][0]']                           \n conv4_block20_1_conv  (None, 2, 2,   110592  ['conv4_block20_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block20_1_bn (  (None, 2, 2,   512     ['conv4_block20_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block20_1_relu  (None, 2, 2,   0       ['conv4_block20_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block20_2_conv  (None, 2, 2,   36864   ['conv4_block20_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block20_concat  (None, 2, 2,   0       ['conv4_block19_conca  N          \n  (Concatenate)       896)                    t[0][0]',                         \n                                               'conv4_block20_2_con             \n                                              v[0][0]']                         \n conv4_block21_0_bn (  (None, 2, 2,   3584    ['conv4_block20_conca  N          \n BatchNormalization)  896)                    t[0][0]']                         \n conv4_block21_0_relu  (None, 2, 2,   0       ['conv4_block21_0_bn[  N          \n  (Activation)        896)                    0][0]']                           \n conv4_block21_1_conv  (None, 2, 2,   114688  ['conv4_block21_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block21_1_bn (  (None, 2, 2,   512     ['conv4_block21_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block21_1_relu  (None, 2, 2,   0       ['conv4_block21_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block21_2_conv  (None, 2, 2,   36864   ['conv4_block21_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block21_concat  (None, 2, 2,   0       ['conv4_block20_conca  N          \n  (Concatenate)       928)                    t[0][0]',                         \n                                               'conv4_block21_2_con             \n                                              v[0][0]']                         \n conv4_block22_0_bn (  (None, 2, 2,   3712    ['conv4_block21_conca  N          \n BatchNormalization)  928)                    t[0][0]']                         \n conv4_block22_0_relu  (None, 2, 2,   0       ['conv4_block22_0_bn[  N          \n  (Activation)        928)                    0][0]']                           \n conv4_block22_1_conv  (None, 2, 2,   118784  ['conv4_block22_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block22_1_bn (  (None, 2, 2,   512     ['conv4_block22_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block22_1_relu  (None, 2, 2,   0       ['conv4_block22_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block22_2_conv  (None, 2, 2,   36864   ['conv4_block22_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block22_concat  (None, 2, 2,   0       ['conv4_block21_conca  N          \n  (Concatenate)       960)                    t[0][0]',                         \n                                               'conv4_block22_2_con             \n                                              v[0][0]']                         \n conv4_block23_0_bn (  (None, 2, 2,   3840    ['conv4_block22_conca  N          \n BatchNormalization)  960)                    t[0][0]']                         \n conv4_block23_0_relu  (None, 2, 2,   0       ['conv4_block23_0_bn[  N          \n  (Activation)        960)                    0][0]']                           \n conv4_block23_1_conv  (None, 2, 2,   122880  ['conv4_block23_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block23_1_bn (  (None, 2, 2,   512     ['conv4_block23_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block23_1_relu  (None, 2, 2,   0       ['conv4_block23_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block23_2_conv  (None, 2, 2,   36864   ['conv4_block23_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block23_concat  (None, 2, 2,   0       ['conv4_block22_conca  N          \n  (Concatenate)       992)                    t[0][0]',                         \n                                               'conv4_block23_2_con             \n                                              v[0][0]']                         \n conv4_block24_0_bn (  (None, 2, 2,   3968    ['conv4_block23_conca  N          \n BatchNormalization)  992)                    t[0][0]']                         \n conv4_block24_0_relu  (None, 2, 2,   0       ['conv4_block24_0_bn[  N          \n  (Activation)        992)                    0][0]']                           \n conv4_block24_1_conv  (None, 2, 2,   126976  ['conv4_block24_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block24_1_bn (  (None, 2, 2,   512     ['conv4_block24_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block24_1_relu  (None, 2, 2,   0       ['conv4_block24_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block24_2_conv  (None, 2, 2,   36864   ['conv4_block24_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block24_concat  (None, 2, 2,   0       ['conv4_block23_conca  N          \n  (Concatenate)       1024)                   t[0][0]',                         \n                                               'conv4_block24_2_con             \n                                              v[0][0]']                         \n conv4_block25_0_bn (  (None, 2, 2,   4096    ['conv4_block24_conca  N          \n BatchNormalization)  1024)                   t[0][0]']                         \n conv4_block25_0_relu  (None, 2, 2,   0       ['conv4_block25_0_bn[  N          \n  (Activation)        1024)                   0][0]']                           \n conv4_block25_1_conv  (None, 2, 2,   131072  ['conv4_block25_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block25_1_bn (  (None, 2, 2,   512     ['conv4_block25_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block25_1_relu  (None, 2, 2,   0       ['conv4_block25_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block25_2_conv  (None, 2, 2,   36864   ['conv4_block25_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block25_concat  (None, 2, 2,   0       ['conv4_block24_conca  N          \n  (Concatenate)       1056)                   t[0][0]',                         \n                                               'conv4_block25_2_con             \n                                              v[0][0]']                         \n conv4_block26_0_bn (  (None, 2, 2,   4224    ['conv4_block25_conca  N          \n BatchNormalization)  1056)                   t[0][0]']                         \n conv4_block26_0_relu  (None, 2, 2,   0       ['conv4_block26_0_bn[  N          \n  (Activation)        1056)                   0][0]']                           \n conv4_block26_1_conv  (None, 2, 2,   135168  ['conv4_block26_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block26_1_bn (  (None, 2, 2,   512     ['conv4_block26_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block26_1_relu  (None, 2, 2,   0       ['conv4_block26_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block26_2_conv  (None, 2, 2,   36864   ['conv4_block26_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block26_concat  (None, 2, 2,   0       ['conv4_block25_conca  N          \n  (Concatenate)       1088)                   t[0][0]',                         \n                                               'conv4_block26_2_con             \n                                              v[0][0]']                         \n conv4_block27_0_bn (  (None, 2, 2,   4352    ['conv4_block26_conca  N          \n BatchNormalization)  1088)                   t[0][0]']                         \n conv4_block27_0_relu  (None, 2, 2,   0       ['conv4_block27_0_bn[  N          \n  (Activation)        1088)                   0][0]']                           \n conv4_block27_1_conv  (None, 2, 2,   139264  ['conv4_block27_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block27_1_bn (  (None, 2, 2,   512     ['conv4_block27_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block27_1_relu  (None, 2, 2,   0       ['conv4_block27_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block27_2_conv  (None, 2, 2,   36864   ['conv4_block27_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block27_concat  (None, 2, 2,   0       ['conv4_block26_conca  N          \n  (Concatenate)       1120)                   t[0][0]',                         \n                                               'conv4_block27_2_con             \n                                              v[0][0]']                         \n conv4_block28_0_bn (  (None, 2, 2,   4480    ['conv4_block27_conca  N          \n BatchNormalization)  1120)                   t[0][0]']                         \n conv4_block28_0_relu  (None, 2, 2,   0       ['conv4_block28_0_bn[  N          \n  (Activation)        1120)                   0][0]']                           \n conv4_block28_1_conv  (None, 2, 2,   143360  ['conv4_block28_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block28_1_bn (  (None, 2, 2,   512     ['conv4_block28_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block28_1_relu  (None, 2, 2,   0       ['conv4_block28_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block28_2_conv  (None, 2, 2,   36864   ['conv4_block28_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block28_concat  (None, 2, 2,   0       ['conv4_block27_conca  N          \n  (Concatenate)       1152)                   t[0][0]',                         \n                                               'conv4_block28_2_con             \n                                              v[0][0]']                         \n conv4_block29_0_bn (  (None, 2, 2,   4608    ['conv4_block28_conca  N          \n BatchNormalization)  1152)                   t[0][0]']                         \n conv4_block29_0_relu  (None, 2, 2,   0       ['conv4_block29_0_bn[  N          \n  (Activation)        1152)                   0][0]']                           \n conv4_block29_1_conv  (None, 2, 2,   147456  ['conv4_block29_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block29_1_bn (  (None, 2, 2,   512     ['conv4_block29_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block29_1_relu  (None, 2, 2,   0       ['conv4_block29_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block29_2_conv  (None, 2, 2,   36864   ['conv4_block29_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block29_concat  (None, 2, 2,   0       ['conv4_block28_conca  N          \n  (Concatenate)       1184)                   t[0][0]',                         \n                                               'conv4_block29_2_con             \n                                              v[0][0]']                         \n conv4_block30_0_bn (  (None, 2, 2,   4736    ['conv4_block29_conca  N          \n BatchNormalization)  1184)                   t[0][0]']                         \n conv4_block30_0_relu  (None, 2, 2,   0       ['conv4_block30_0_bn[  N          \n  (Activation)        1184)                   0][0]']                           \n conv4_block30_1_conv  (None, 2, 2,   151552  ['conv4_block30_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block30_1_bn (  (None, 2, 2,   512     ['conv4_block30_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block30_1_relu  (None, 2, 2,   0       ['conv4_block30_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block30_2_conv  (None, 2, 2,   36864   ['conv4_block30_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block30_concat  (None, 2, 2,   0       ['conv4_block29_conca  N          \n  (Concatenate)       1216)                   t[0][0]',                         \n                                               'conv4_block30_2_con             \n                                              v[0][0]']                         \n conv4_block31_0_bn (  (None, 2, 2,   4864    ['conv4_block30_conca  N          \n BatchNormalization)  1216)                   t[0][0]']                         \n conv4_block31_0_relu  (None, 2, 2,   0       ['conv4_block31_0_bn[  N          \n  (Activation)        1216)                   0][0]']                           \n conv4_block31_1_conv  (None, 2, 2,   155648  ['conv4_block31_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block31_1_bn (  (None, 2, 2,   512     ['conv4_block31_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block31_1_relu  (None, 2, 2,   0       ['conv4_block31_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block31_2_conv  (None, 2, 2,   36864   ['conv4_block31_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block31_concat  (None, 2, 2,   0       ['conv4_block30_conca  N          \n  (Concatenate)       1248)                   t[0][0]',                         \n                                               'conv4_block31_2_con             \n                                              v[0][0]']                         \n conv4_block32_0_bn (  (None, 2, 2,   4992    ['conv4_block31_conca  N          \n BatchNormalization)  1248)                   t[0][0]']                         \n conv4_block32_0_relu  (None, 2, 2,   0       ['conv4_block32_0_bn[  N          \n  (Activation)        1248)                   0][0]']                           \n conv4_block32_1_conv  (None, 2, 2,   159744  ['conv4_block32_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block32_1_bn (  (None, 2, 2,   512     ['conv4_block32_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block32_1_relu  (None, 2, 2,   0       ['conv4_block32_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block32_2_conv  (None, 2, 2,   36864   ['conv4_block32_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block32_concat  (None, 2, 2,   0       ['conv4_block31_conca  N          \n  (Concatenate)       1280)                   t[0][0]',                         \n                                               'conv4_block32_2_con             \n                                              v[0][0]']                         \n conv4_block33_0_bn (  (None, 2, 2,   5120    ['conv4_block32_conca  N          \n BatchNormalization)  1280)                   t[0][0]']                         \n conv4_block33_0_relu  (None, 2, 2,   0       ['conv4_block33_0_bn[  N          \n  (Activation)        1280)                   0][0]']                           \n conv4_block33_1_conv  (None, 2, 2,   163840  ['conv4_block33_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block33_1_bn (  (None, 2, 2,   512     ['conv4_block33_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block33_1_relu  (None, 2, 2,   0       ['conv4_block33_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block33_2_conv  (None, 2, 2,   36864   ['conv4_block33_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block33_concat  (None, 2, 2,   0       ['conv4_block32_conca  N          \n  (Concatenate)       1312)                   t[0][0]',                         \n                                               'conv4_block33_2_con             \n                                              v[0][0]']                         \n conv4_block34_0_bn (  (None, 2, 2,   5248    ['conv4_block33_conca  N          \n BatchNormalization)  1312)                   t[0][0]']                         \n conv4_block34_0_relu  (None, 2, 2,   0       ['conv4_block34_0_bn[  N          \n  (Activation)        1312)                   0][0]']                           \n conv4_block34_1_conv  (None, 2, 2,   167936  ['conv4_block34_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block34_1_bn (  (None, 2, 2,   512     ['conv4_block34_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block34_1_relu  (None, 2, 2,   0       ['conv4_block34_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block34_2_conv  (None, 2, 2,   36864   ['conv4_block34_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block34_concat  (None, 2, 2,   0       ['conv4_block33_conca  N          \n  (Concatenate)       1344)                   t[0][0]',                         \n                                               'conv4_block34_2_con             \n                                              v[0][0]']                         \n conv4_block35_0_bn (  (None, 2, 2,   5376    ['conv4_block34_conca  N          \n BatchNormalization)  1344)                   t[0][0]']                         \n conv4_block35_0_relu  (None, 2, 2,   0       ['conv4_block35_0_bn[  N          \n  (Activation)        1344)                   0][0]']                           \n conv4_block35_1_conv  (None, 2, 2,   172032  ['conv4_block35_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block35_1_bn (  (None, 2, 2,   512     ['conv4_block35_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block35_1_relu  (None, 2, 2,   0       ['conv4_block35_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block35_2_conv  (None, 2, 2,   36864   ['conv4_block35_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block35_concat  (None, 2, 2,   0       ['conv4_block34_conca  N          \n  (Concatenate)       1376)                   t[0][0]',                         \n                                               'conv4_block35_2_con             \n                                              v[0][0]']                         \n conv4_block36_0_bn (  (None, 2, 2,   5504    ['conv4_block35_conca  N          \n BatchNormalization)  1376)                   t[0][0]']                         \n conv4_block36_0_relu  (None, 2, 2,   0       ['conv4_block36_0_bn[  N          \n  (Activation)        1376)                   0][0]']                           \n conv4_block36_1_conv  (None, 2, 2,   176128  ['conv4_block36_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block36_1_bn (  (None, 2, 2,   512     ['conv4_block36_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block36_1_relu  (None, 2, 2,   0       ['conv4_block36_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block36_2_conv  (None, 2, 2,   36864   ['conv4_block36_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block36_concat  (None, 2, 2,   0       ['conv4_block35_conca  N          \n  (Concatenate)       1408)                   t[0][0]',                         \n                                               'conv4_block36_2_con             \n                                              v[0][0]']                         \n conv4_block37_0_bn (  (None, 2, 2,   5632    ['conv4_block36_conca  N          \n BatchNormalization)  1408)                   t[0][0]']                         \n conv4_block37_0_relu  (None, 2, 2,   0       ['conv4_block37_0_bn[  N          \n  (Activation)        1408)                   0][0]']                           \n conv4_block37_1_conv  (None, 2, 2,   180224  ['conv4_block37_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block37_1_bn (  (None, 2, 2,   512     ['conv4_block37_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block37_1_relu  (None, 2, 2,   0       ['conv4_block37_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block37_2_conv  (None, 2, 2,   36864   ['conv4_block37_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block37_concat  (None, 2, 2,   0       ['conv4_block36_conca  N          \n  (Concatenate)       1440)                   t[0][0]',                         \n                                               'conv4_block37_2_con             \n                                              v[0][0]']                         \n conv4_block38_0_bn (  (None, 2, 2,   5760    ['conv4_block37_conca  N          \n BatchNormalization)  1440)                   t[0][0]']                         \n conv4_block38_0_relu  (None, 2, 2,   0       ['conv4_block38_0_bn[  N          \n  (Activation)        1440)                   0][0]']                           \n conv4_block38_1_conv  (None, 2, 2,   184320  ['conv4_block38_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block38_1_bn (  (None, 2, 2,   512     ['conv4_block38_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block38_1_relu  (None, 2, 2,   0       ['conv4_block38_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block38_2_conv  (None, 2, 2,   36864   ['conv4_block38_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block38_concat  (None, 2, 2,   0       ['conv4_block37_conca  N          \n  (Concatenate)       1472)                   t[0][0]',                         \n                                               'conv4_block38_2_con             \n                                              v[0][0]']                         \n conv4_block39_0_bn (  (None, 2, 2,   5888    ['conv4_block38_conca  N          \n BatchNormalization)  1472)                   t[0][0]']                         \n conv4_block39_0_relu  (None, 2, 2,   0       ['conv4_block39_0_bn[  N          \n  (Activation)        1472)                   0][0]']                           \n conv4_block39_1_conv  (None, 2, 2,   188416  ['conv4_block39_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block39_1_bn (  (None, 2, 2,   512     ['conv4_block39_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block39_1_relu  (None, 2, 2,   0       ['conv4_block39_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block39_2_conv  (None, 2, 2,   36864   ['conv4_block39_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block39_concat  (None, 2, 2,   0       ['conv4_block38_conca  N          \n  (Concatenate)       1504)                   t[0][0]',                         \n                                               'conv4_block39_2_con             \n                                              v[0][0]']                         \n conv4_block40_0_bn (  (None, 2, 2,   6016    ['conv4_block39_conca  N          \n BatchNormalization)  1504)                   t[0][0]']                         \n conv4_block40_0_relu  (None, 2, 2,   0       ['conv4_block40_0_bn[  N          \n  (Activation)        1504)                   0][0]']                           \n conv4_block40_1_conv  (None, 2, 2,   192512  ['conv4_block40_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block40_1_bn (  (None, 2, 2,   512     ['conv4_block40_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block40_1_relu  (None, 2, 2,   0       ['conv4_block40_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block40_2_conv  (None, 2, 2,   36864   ['conv4_block40_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block40_concat  (None, 2, 2,   0       ['conv4_block39_conca  N          \n  (Concatenate)       1536)                   t[0][0]',                         \n                                               'conv4_block40_2_con             \n                                              v[0][0]']                         \n conv4_block41_0_bn (  (None, 2, 2,   6144    ['conv4_block40_conca  N          \n BatchNormalization)  1536)                   t[0][0]']                         \n conv4_block41_0_relu  (None, 2, 2,   0       ['conv4_block41_0_bn[  N          \n  (Activation)        1536)                   0][0]']                           \n conv4_block41_1_conv  (None, 2, 2,   196608  ['conv4_block41_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block41_1_bn (  (None, 2, 2,   512     ['conv4_block41_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block41_1_relu  (None, 2, 2,   0       ['conv4_block41_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block41_2_conv  (None, 2, 2,   36864   ['conv4_block41_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block41_concat  (None, 2, 2,   0       ['conv4_block40_conca  N          \n  (Concatenate)       1568)                   t[0][0]',                         \n                                               'conv4_block41_2_con             \n                                              v[0][0]']                         \n conv4_block42_0_bn (  (None, 2, 2,   6272    ['conv4_block41_conca  N          \n BatchNormalization)  1568)                   t[0][0]']                         \n conv4_block42_0_relu  (None, 2, 2,   0       ['conv4_block42_0_bn[  N          \n  (Activation)        1568)                   0][0]']                           \n conv4_block42_1_conv  (None, 2, 2,   200704  ['conv4_block42_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block42_1_bn (  (None, 2, 2,   512     ['conv4_block42_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block42_1_relu  (None, 2, 2,   0       ['conv4_block42_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block42_2_conv  (None, 2, 2,   36864   ['conv4_block42_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block42_concat  (None, 2, 2,   0       ['conv4_block41_conca  N          \n  (Concatenate)       1600)                   t[0][0]',                         \n                                               'conv4_block42_2_con             \n                                              v[0][0]']                         \n conv4_block43_0_bn (  (None, 2, 2,   6400    ['conv4_block42_conca  N          \n BatchNormalization)  1600)                   t[0][0]']                         \n conv4_block43_0_relu  (None, 2, 2,   0       ['conv4_block43_0_bn[  N          \n  (Activation)        1600)                   0][0]']                           \n conv4_block43_1_conv  (None, 2, 2,   204800  ['conv4_block43_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block43_1_bn (  (None, 2, 2,   512     ['conv4_block43_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block43_1_relu  (None, 2, 2,   0       ['conv4_block43_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block43_2_conv  (None, 2, 2,   36864   ['conv4_block43_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block43_concat  (None, 2, 2,   0       ['conv4_block42_conca  N          \n  (Concatenate)       1632)                   t[0][0]',                         \n                                               'conv4_block43_2_con             \n                                              v[0][0]']                         \n conv4_block44_0_bn (  (None, 2, 2,   6528    ['conv4_block43_conca  N          \n BatchNormalization)  1632)                   t[0][0]']                         \n conv4_block44_0_relu  (None, 2, 2,   0       ['conv4_block44_0_bn[  N          \n  (Activation)        1632)                   0][0]']                           \n conv4_block44_1_conv  (None, 2, 2,   208896  ['conv4_block44_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block44_1_bn (  (None, 2, 2,   512     ['conv4_block44_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block44_1_relu  (None, 2, 2,   0       ['conv4_block44_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block44_2_conv  (None, 2, 2,   36864   ['conv4_block44_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block44_concat  (None, 2, 2,   0       ['conv4_block43_conca  N          \n  (Concatenate)       1664)                   t[0][0]',                         \n                                               'conv4_block44_2_con             \n                                              v[0][0]']                         \n conv4_block45_0_bn (  (None, 2, 2,   6656    ['conv4_block44_conca  N          \n BatchNormalization)  1664)                   t[0][0]']                         \n conv4_block45_0_relu  (None, 2, 2,   0       ['conv4_block45_0_bn[  N          \n  (Activation)        1664)                   0][0]']                           \n conv4_block45_1_conv  (None, 2, 2,   212992  ['conv4_block45_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block45_1_bn (  (None, 2, 2,   512     ['conv4_block45_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block45_1_relu  (None, 2, 2,   0       ['conv4_block45_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block45_2_conv  (None, 2, 2,   36864   ['conv4_block45_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block45_concat  (None, 2, 2,   0       ['conv4_block44_conca  N          \n  (Concatenate)       1696)                   t[0][0]',                         \n                                               'conv4_block45_2_con             \n                                              v[0][0]']                         \n conv4_block46_0_bn (  (None, 2, 2,   6784    ['conv4_block45_conca  N          \n BatchNormalization)  1696)                   t[0][0]']                         \n conv4_block46_0_relu  (None, 2, 2,   0       ['conv4_block46_0_bn[  N          \n  (Activation)        1696)                   0][0]']                           \n conv4_block46_1_conv  (None, 2, 2,   217088  ['conv4_block46_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block46_1_bn (  (None, 2, 2,   512     ['conv4_block46_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block46_1_relu  (None, 2, 2,   0       ['conv4_block46_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block46_2_conv  (None, 2, 2,   36864   ['conv4_block46_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block46_concat  (None, 2, 2,   0       ['conv4_block45_conca  N          \n  (Concatenate)       1728)                   t[0][0]',                         \n                                               'conv4_block46_2_con             \n                                              v[0][0]']                         \n conv4_block47_0_bn (  (None, 2, 2,   6912    ['conv4_block46_conca  N          \n BatchNormalization)  1728)                   t[0][0]']                         \n conv4_block47_0_relu  (None, 2, 2,   0       ['conv4_block47_0_bn[  N          \n  (Activation)        1728)                   0][0]']                           \n conv4_block47_1_conv  (None, 2, 2,   221184  ['conv4_block47_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block47_1_bn (  (None, 2, 2,   512     ['conv4_block47_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block47_1_relu  (None, 2, 2,   0       ['conv4_block47_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block47_2_conv  (None, 2, 2,   36864   ['conv4_block47_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block47_concat  (None, 2, 2,   0       ['conv4_block46_conca  N          \n  (Concatenate)       1760)                   t[0][0]',                         \n                                               'conv4_block47_2_con             \n                                              v[0][0]']                         \n conv4_block48_0_bn (  (None, 2, 2,   7040    ['conv4_block47_conca  N          \n BatchNormalization)  1760)                   t[0][0]']                         \n conv4_block48_0_relu  (None, 2, 2,   0       ['conv4_block48_0_bn[  N          \n  (Activation)        1760)                   0][0]']                           \n conv4_block48_1_conv  (None, 2, 2,   225280  ['conv4_block48_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv4_block48_1_bn (  (None, 2, 2,   512     ['conv4_block48_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv4_block48_1_relu  (None, 2, 2,   0       ['conv4_block48_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv4_block48_2_conv  (None, 2, 2,   36864   ['conv4_block48_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv4_block48_concat  (None, 2, 2,   0       ['conv4_block47_conca  N          \n  (Concatenate)       1792)                   t[0][0]',                         \n                                               'conv4_block48_2_con             \n                                              v[0][0]']                         \n pool4_bn (BatchNorma  (None, 2, 2,   7168    ['conv4_block48_conca  N          \n lization)            1792)                   t[0][0]']                         \n pool4_relu (Activati  (None, 2, 2,   0       ['pool4_bn[0][0]']     N          \n on)                  1792)                                                     \n pool4_conv (Conv2D)  (None, 2, 2,   1605632  ['pool4_relu[0][0]']   N          \n                      896)                                                      \n pool4_pool (AverageP  (None, 1, 1,   0       ['pool4_conv[0][0]']   N          \n ooling2D)            896)                                                      \n conv5_block1_0_bn (B  (None, 1, 1,   3584    ['pool4_pool[0][0]']   N          \n atchNormalization)   896)                                                      \n conv5_block1_0_relu   (None, 1, 1,   0       ['conv5_block1_0_bn[0  N          \n (Activation)         896)                    ][0]']                            \n conv5_block1_1_conv   (None, 1, 1,   114688  ['conv5_block1_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block1_1_bn (B  (None, 1, 1,   512     ['conv5_block1_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block1_1_relu   (None, 1, 1,   0       ['conv5_block1_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block1_2_conv   (None, 1, 1,   36864   ['conv5_block1_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block1_concat   (None, 1, 1,   0       ['pool4_pool[0][0]',   N          \n (Concatenate)        928)                     'conv5_block1_2_conv             \n                                              [0][0]']                          \n conv5_block2_0_bn (B  (None, 1, 1,   3712    ['conv5_block1_concat  N          \n atchNormalization)   928)                    [0][0]']                          \n conv5_block2_0_relu   (None, 1, 1,   0       ['conv5_block2_0_bn[0  N          \n (Activation)         928)                    ][0]']                            \n conv5_block2_1_conv   (None, 1, 1,   118784  ['conv5_block2_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block2_1_bn (B  (None, 1, 1,   512     ['conv5_block2_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block2_1_relu   (None, 1, 1,   0       ['conv5_block2_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block2_2_conv   (None, 1, 1,   36864   ['conv5_block2_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block2_concat   (None, 1, 1,   0       ['conv5_block1_concat  N          \n (Concatenate)        960)                    [0][0]',                          \n                                               'conv5_block2_2_conv             \n                                              [0][0]']                          \n conv5_block3_0_bn (B  (None, 1, 1,   3840    ['conv5_block2_concat  N          \n atchNormalization)   960)                    [0][0]']                          \n conv5_block3_0_relu   (None, 1, 1,   0       ['conv5_block3_0_bn[0  N          \n (Activation)         960)                    ][0]']                            \n conv5_block3_1_conv   (None, 1, 1,   122880  ['conv5_block3_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block3_1_bn (B  (None, 1, 1,   512     ['conv5_block3_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block3_1_relu   (None, 1, 1,   0       ['conv5_block3_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block3_2_conv   (None, 1, 1,   36864   ['conv5_block3_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block3_concat   (None, 1, 1,   0       ['conv5_block2_concat  N          \n (Concatenate)        992)                    [0][0]',                          \n                                               'conv5_block3_2_conv             \n                                              [0][0]']                          \n conv5_block4_0_bn (B  (None, 1, 1,   3968    ['conv5_block3_concat  N          \n atchNormalization)   992)                    [0][0]']                          \n conv5_block4_0_relu   (None, 1, 1,   0       ['conv5_block4_0_bn[0  N          \n (Activation)         992)                    ][0]']                            \n conv5_block4_1_conv   (None, 1, 1,   126976  ['conv5_block4_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block4_1_bn (B  (None, 1, 1,   512     ['conv5_block4_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block4_1_relu   (None, 1, 1,   0       ['conv5_block4_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block4_2_conv   (None, 1, 1,   36864   ['conv5_block4_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block4_concat   (None, 1, 1,   0       ['conv5_block3_concat  N          \n (Concatenate)        1024)                   [0][0]',                          \n                                               'conv5_block4_2_conv             \n                                              [0][0]']                          \n conv5_block5_0_bn (B  (None, 1, 1,   4096    ['conv5_block4_concat  N          \n atchNormalization)   1024)                   [0][0]']                          \n conv5_block5_0_relu   (None, 1, 1,   0       ['conv5_block5_0_bn[0  N          \n (Activation)         1024)                   ][0]']                            \n conv5_block5_1_conv   (None, 1, 1,   131072  ['conv5_block5_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block5_1_bn (B  (None, 1, 1,   512     ['conv5_block5_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block5_1_relu   (None, 1, 1,   0       ['conv5_block5_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block5_2_conv   (None, 1, 1,   36864   ['conv5_block5_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block5_concat   (None, 1, 1,   0       ['conv5_block4_concat  N          \n (Concatenate)        1056)                   [0][0]',                          \n                                               'conv5_block5_2_conv             \n                                              [0][0]']                          \n conv5_block6_0_bn (B  (None, 1, 1,   4224    ['conv5_block5_concat  N          \n atchNormalization)   1056)                   [0][0]']                          \n conv5_block6_0_relu   (None, 1, 1,   0       ['conv5_block6_0_bn[0  N          \n (Activation)         1056)                   ][0]']                            \n conv5_block6_1_conv   (None, 1, 1,   135168  ['conv5_block6_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block6_1_bn (B  (None, 1, 1,   512     ['conv5_block6_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block6_1_relu   (None, 1, 1,   0       ['conv5_block6_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block6_2_conv   (None, 1, 1,   36864   ['conv5_block6_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block6_concat   (None, 1, 1,   0       ['conv5_block5_concat  N          \n (Concatenate)        1088)                   [0][0]',                          \n                                               'conv5_block6_2_conv             \n                                              [0][0]']                          \n conv5_block7_0_bn (B  (None, 1, 1,   4352    ['conv5_block6_concat  N          \n atchNormalization)   1088)                   [0][0]']                          \n conv5_block7_0_relu   (None, 1, 1,   0       ['conv5_block7_0_bn[0  N          \n (Activation)         1088)                   ][0]']                            \n conv5_block7_1_conv   (None, 1, 1,   139264  ['conv5_block7_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block7_1_bn (B  (None, 1, 1,   512     ['conv5_block7_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block7_1_relu   (None, 1, 1,   0       ['conv5_block7_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block7_2_conv   (None, 1, 1,   36864   ['conv5_block7_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block7_concat   (None, 1, 1,   0       ['conv5_block6_concat  N          \n (Concatenate)        1120)                   [0][0]',                          \n                                               'conv5_block7_2_conv             \n                                              [0][0]']                          \n conv5_block8_0_bn (B  (None, 1, 1,   4480    ['conv5_block7_concat  N          \n atchNormalization)   1120)                   [0][0]']                          \n conv5_block8_0_relu   (None, 1, 1,   0       ['conv5_block8_0_bn[0  N          \n (Activation)         1120)                   ][0]']                            \n conv5_block8_1_conv   (None, 1, 1,   143360  ['conv5_block8_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block8_1_bn (B  (None, 1, 1,   512     ['conv5_block8_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block8_1_relu   (None, 1, 1,   0       ['conv5_block8_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block8_2_conv   (None, 1, 1,   36864   ['conv5_block8_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block8_concat   (None, 1, 1,   0       ['conv5_block7_concat  N          \n (Concatenate)        1152)                   [0][0]',                          \n                                               'conv5_block8_2_conv             \n                                              [0][0]']                          \n conv5_block9_0_bn (B  (None, 1, 1,   4608    ['conv5_block8_concat  N          \n atchNormalization)   1152)                   [0][0]']                          \n conv5_block9_0_relu   (None, 1, 1,   0       ['conv5_block9_0_bn[0  N          \n (Activation)         1152)                   ][0]']                            \n conv5_block9_1_conv   (None, 1, 1,   147456  ['conv5_block9_0_relu  N          \n (Conv2D)             128)                    [0][0]']                          \n conv5_block9_1_bn (B  (None, 1, 1,   512     ['conv5_block9_1_conv  N          \n atchNormalization)   128)                    [0][0]']                          \n conv5_block9_1_relu   (None, 1, 1,   0       ['conv5_block9_1_bn[0  N          \n (Activation)         128)                    ][0]']                            \n conv5_block9_2_conv   (None, 1, 1,   36864   ['conv5_block9_1_relu  N          \n (Conv2D)             32)                     [0][0]']                          \n conv5_block9_concat   (None, 1, 1,   0       ['conv5_block8_concat  N          \n (Concatenate)        1184)                   [0][0]',                          \n                                               'conv5_block9_2_conv             \n                                              [0][0]']                          \n conv5_block10_0_bn (  (None, 1, 1,   4736    ['conv5_block9_concat  N          \n BatchNormalization)  1184)                   [0][0]']                          \n conv5_block10_0_relu  (None, 1, 1,   0       ['conv5_block10_0_bn[  N          \n  (Activation)        1184)                   0][0]']                           \n conv5_block10_1_conv  (None, 1, 1,   151552  ['conv5_block10_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block10_1_bn (  (None, 1, 1,   512     ['conv5_block10_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block10_1_relu  (None, 1, 1,   0       ['conv5_block10_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block10_2_conv  (None, 1, 1,   36864   ['conv5_block10_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block10_concat  (None, 1, 1,   0       ['conv5_block9_concat  N          \n  (Concatenate)       1216)                   [0][0]',                          \n                                               'conv5_block10_2_con             \n                                              v[0][0]']                         \n conv5_block11_0_bn (  (None, 1, 1,   4864    ['conv5_block10_conca  N          \n BatchNormalization)  1216)                   t[0][0]']                         \n conv5_block11_0_relu  (None, 1, 1,   0       ['conv5_block11_0_bn[  N          \n  (Activation)        1216)                   0][0]']                           \n conv5_block11_1_conv  (None, 1, 1,   155648  ['conv5_block11_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block11_1_bn (  (None, 1, 1,   512     ['conv5_block11_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block11_1_relu  (None, 1, 1,   0       ['conv5_block11_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block11_2_conv  (None, 1, 1,   36864   ['conv5_block11_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block11_concat  (None, 1, 1,   0       ['conv5_block10_conca  N          \n  (Concatenate)       1248)                   t[0][0]',                         \n                                               'conv5_block11_2_con             \n                                              v[0][0]']                         \n conv5_block12_0_bn (  (None, 1, 1,   4992    ['conv5_block11_conca  N          \n BatchNormalization)  1248)                   t[0][0]']                         \n conv5_block12_0_relu  (None, 1, 1,   0       ['conv5_block12_0_bn[  N          \n  (Activation)        1248)                   0][0]']                           \n conv5_block12_1_conv  (None, 1, 1,   159744  ['conv5_block12_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block12_1_bn (  (None, 1, 1,   512     ['conv5_block12_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block12_1_relu  (None, 1, 1,   0       ['conv5_block12_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block12_2_conv  (None, 1, 1,   36864   ['conv5_block12_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block12_concat  (None, 1, 1,   0       ['conv5_block11_conca  N          \n  (Concatenate)       1280)                   t[0][0]',                         \n                                               'conv5_block12_2_con             \n                                              v[0][0]']                         \n conv5_block13_0_bn (  (None, 1, 1,   5120    ['conv5_block12_conca  N          \n BatchNormalization)  1280)                   t[0][0]']                         \n conv5_block13_0_relu  (None, 1, 1,   0       ['conv5_block13_0_bn[  N          \n  (Activation)        1280)                   0][0]']                           \n conv5_block13_1_conv  (None, 1, 1,   163840  ['conv5_block13_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block13_1_bn (  (None, 1, 1,   512     ['conv5_block13_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block13_1_relu  (None, 1, 1,   0       ['conv5_block13_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block13_2_conv  (None, 1, 1,   36864   ['conv5_block13_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block13_concat  (None, 1, 1,   0       ['conv5_block12_conca  N          \n  (Concatenate)       1312)                   t[0][0]',                         \n                                               'conv5_block13_2_con             \n                                              v[0][0]']                         \n conv5_block14_0_bn (  (None, 1, 1,   5248    ['conv5_block13_conca  N          \n BatchNormalization)  1312)                   t[0][0]']                         \n conv5_block14_0_relu  (None, 1, 1,   0       ['conv5_block14_0_bn[  N          \n  (Activation)        1312)                   0][0]']                           \n conv5_block14_1_conv  (None, 1, 1,   167936  ['conv5_block14_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block14_1_bn (  (None, 1, 1,   512     ['conv5_block14_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block14_1_relu  (None, 1, 1,   0       ['conv5_block14_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block14_2_conv  (None, 1, 1,   36864   ['conv5_block14_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block14_concat  (None, 1, 1,   0       ['conv5_block13_conca  N          \n  (Concatenate)       1344)                   t[0][0]',                         \n                                               'conv5_block14_2_con             \n                                              v[0][0]']                         \n conv5_block15_0_bn (  (None, 1, 1,   5376    ['conv5_block14_conca  N          \n BatchNormalization)  1344)                   t[0][0]']                         \n conv5_block15_0_relu  (None, 1, 1,   0       ['conv5_block15_0_bn[  N          \n  (Activation)        1344)                   0][0]']                           \n conv5_block15_1_conv  (None, 1, 1,   172032  ['conv5_block15_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block15_1_bn (  (None, 1, 1,   512     ['conv5_block15_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block15_1_relu  (None, 1, 1,   0       ['conv5_block15_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block15_2_conv  (None, 1, 1,   36864   ['conv5_block15_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block15_concat  (None, 1, 1,   0       ['conv5_block14_conca  N          \n  (Concatenate)       1376)                   t[0][0]',                         \n                                               'conv5_block15_2_con             \n                                              v[0][0]']                         \n conv5_block16_0_bn (  (None, 1, 1,   5504    ['conv5_block15_conca  N          \n BatchNormalization)  1376)                   t[0][0]']                         \n conv5_block16_0_relu  (None, 1, 1,   0       ['conv5_block16_0_bn[  N          \n  (Activation)        1376)                   0][0]']                           \n conv5_block16_1_conv  (None, 1, 1,   176128  ['conv5_block16_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block16_1_bn (  (None, 1, 1,   512     ['conv5_block16_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block16_1_relu  (None, 1, 1,   0       ['conv5_block16_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block16_2_conv  (None, 1, 1,   36864   ['conv5_block16_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block16_concat  (None, 1, 1,   0       ['conv5_block15_conca  N          \n  (Concatenate)       1408)                   t[0][0]',                         \n                                               'conv5_block16_2_con             \n                                              v[0][0]']                         \n conv5_block17_0_bn (  (None, 1, 1,   5632    ['conv5_block16_conca  N          \n BatchNormalization)  1408)                   t[0][0]']                         \n conv5_block17_0_relu  (None, 1, 1,   0       ['conv5_block17_0_bn[  N          \n  (Activation)        1408)                   0][0]']                           \n conv5_block17_1_conv  (None, 1, 1,   180224  ['conv5_block17_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block17_1_bn (  (None, 1, 1,   512     ['conv5_block17_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block17_1_relu  (None, 1, 1,   0       ['conv5_block17_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block17_2_conv  (None, 1, 1,   36864   ['conv5_block17_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block17_concat  (None, 1, 1,   0       ['conv5_block16_conca  N          \n  (Concatenate)       1440)                   t[0][0]',                         \n                                               'conv5_block17_2_con             \n                                              v[0][0]']                         \n conv5_block18_0_bn (  (None, 1, 1,   5760    ['conv5_block17_conca  N          \n BatchNormalization)  1440)                   t[0][0]']                         \n conv5_block18_0_relu  (None, 1, 1,   0       ['conv5_block18_0_bn[  N          \n  (Activation)        1440)                   0][0]']                           \n conv5_block18_1_conv  (None, 1, 1,   184320  ['conv5_block18_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block18_1_bn (  (None, 1, 1,   512     ['conv5_block18_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block18_1_relu  (None, 1, 1,   0       ['conv5_block18_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block18_2_conv  (None, 1, 1,   36864   ['conv5_block18_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block18_concat  (None, 1, 1,   0       ['conv5_block17_conca  N          \n  (Concatenate)       1472)                   t[0][0]',                         \n                                               'conv5_block18_2_con             \n                                              v[0][0]']                         \n conv5_block19_0_bn (  (None, 1, 1,   5888    ['conv5_block18_conca  N          \n BatchNormalization)  1472)                   t[0][0]']                         \n conv5_block19_0_relu  (None, 1, 1,   0       ['conv5_block19_0_bn[  N          \n  (Activation)        1472)                   0][0]']                           \n conv5_block19_1_conv  (None, 1, 1,   188416  ['conv5_block19_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block19_1_bn (  (None, 1, 1,   512     ['conv5_block19_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block19_1_relu  (None, 1, 1,   0       ['conv5_block19_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block19_2_conv  (None, 1, 1,   36864   ['conv5_block19_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block19_concat  (None, 1, 1,   0       ['conv5_block18_conca  N          \n  (Concatenate)       1504)                   t[0][0]',                         \n                                               'conv5_block19_2_con             \n                                              v[0][0]']                         \n conv5_block20_0_bn (  (None, 1, 1,   6016    ['conv5_block19_conca  N          \n BatchNormalization)  1504)                   t[0][0]']                         \n conv5_block20_0_relu  (None, 1, 1,   0       ['conv5_block20_0_bn[  N          \n  (Activation)        1504)                   0][0]']                           \n conv5_block20_1_conv  (None, 1, 1,   192512  ['conv5_block20_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block20_1_bn (  (None, 1, 1,   512     ['conv5_block20_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block20_1_relu  (None, 1, 1,   0       ['conv5_block20_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block20_2_conv  (None, 1, 1,   36864   ['conv5_block20_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block20_concat  (None, 1, 1,   0       ['conv5_block19_conca  N          \n  (Concatenate)       1536)                   t[0][0]',                         \n                                               'conv5_block20_2_con             \n                                              v[0][0]']                         \n conv5_block21_0_bn (  (None, 1, 1,   6144    ['conv5_block20_conca  N          \n BatchNormalization)  1536)                   t[0][0]']                         \n conv5_block21_0_relu  (None, 1, 1,   0       ['conv5_block21_0_bn[  N          \n  (Activation)        1536)                   0][0]']                           \n conv5_block21_1_conv  (None, 1, 1,   196608  ['conv5_block21_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block21_1_bn (  (None, 1, 1,   512     ['conv5_block21_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block21_1_relu  (None, 1, 1,   0       ['conv5_block21_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block21_2_conv  (None, 1, 1,   36864   ['conv5_block21_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block21_concat  (None, 1, 1,   0       ['conv5_block20_conca  N          \n  (Concatenate)       1568)                   t[0][0]',                         \n                                               'conv5_block21_2_con             \n                                              v[0][0]']                         \n conv5_block22_0_bn (  (None, 1, 1,   6272    ['conv5_block21_conca  N          \n BatchNormalization)  1568)                   t[0][0]']                         \n conv5_block22_0_relu  (None, 1, 1,   0       ['conv5_block22_0_bn[  N          \n  (Activation)        1568)                   0][0]']                           \n conv5_block22_1_conv  (None, 1, 1,   200704  ['conv5_block22_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block22_1_bn (  (None, 1, 1,   512     ['conv5_block22_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block22_1_relu  (None, 1, 1,   0       ['conv5_block22_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block22_2_conv  (None, 1, 1,   36864   ['conv5_block22_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block22_concat  (None, 1, 1,   0       ['conv5_block21_conca  N          \n  (Concatenate)       1600)                   t[0][0]',                         \n                                               'conv5_block22_2_con             \n                                              v[0][0]']                         \n conv5_block23_0_bn (  (None, 1, 1,   6400    ['conv5_block22_conca  N          \n BatchNormalization)  1600)                   t[0][0]']                         \n conv5_block23_0_relu  (None, 1, 1,   0       ['conv5_block23_0_bn[  N          \n  (Activation)        1600)                   0][0]']                           \n conv5_block23_1_conv  (None, 1, 1,   204800  ['conv5_block23_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block23_1_bn (  (None, 1, 1,   512     ['conv5_block23_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block23_1_relu  (None, 1, 1,   0       ['conv5_block23_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block23_2_conv  (None, 1, 1,   36864   ['conv5_block23_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block23_concat  (None, 1, 1,   0       ['conv5_block22_conca  N          \n  (Concatenate)       1632)                   t[0][0]',                         \n                                               'conv5_block23_2_con             \n                                              v[0][0]']                         \n conv5_block24_0_bn (  (None, 1, 1,   6528    ['conv5_block23_conca  N          \n BatchNormalization)  1632)                   t[0][0]']                         \n conv5_block24_0_relu  (None, 1, 1,   0       ['conv5_block24_0_bn[  N          \n  (Activation)        1632)                   0][0]']                           \n conv5_block24_1_conv  (None, 1, 1,   208896  ['conv5_block24_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block24_1_bn (  (None, 1, 1,   512     ['conv5_block24_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block24_1_relu  (None, 1, 1,   0       ['conv5_block24_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block24_2_conv  (None, 1, 1,   36864   ['conv5_block24_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block24_concat  (None, 1, 1,   0       ['conv5_block23_conca  N          \n  (Concatenate)       1664)                   t[0][0]',                         \n                                               'conv5_block24_2_con             \n                                              v[0][0]']                         \n conv5_block25_0_bn (  (None, 1, 1,   6656    ['conv5_block24_conca  N          \n BatchNormalization)  1664)                   t[0][0]']                         \n conv5_block25_0_relu  (None, 1, 1,   0       ['conv5_block25_0_bn[  N          \n  (Activation)        1664)                   0][0]']                           \n conv5_block25_1_conv  (None, 1, 1,   212992  ['conv5_block25_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block25_1_bn (  (None, 1, 1,   512     ['conv5_block25_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block25_1_relu  (None, 1, 1,   0       ['conv5_block25_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block25_2_conv  (None, 1, 1,   36864   ['conv5_block25_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block25_concat  (None, 1, 1,   0       ['conv5_block24_conca  N          \n  (Concatenate)       1696)                   t[0][0]',                         \n                                               'conv5_block25_2_con             \n                                              v[0][0]']                         \n conv5_block26_0_bn (  (None, 1, 1,   6784    ['conv5_block25_conca  N          \n BatchNormalization)  1696)                   t[0][0]']                         \n conv5_block26_0_relu  (None, 1, 1,   0       ['conv5_block26_0_bn[  N          \n  (Activation)        1696)                   0][0]']                           \n conv5_block26_1_conv  (None, 1, 1,   217088  ['conv5_block26_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block26_1_bn (  (None, 1, 1,   512     ['conv5_block26_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block26_1_relu  (None, 1, 1,   0       ['conv5_block26_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block26_2_conv  (None, 1, 1,   36864   ['conv5_block26_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block26_concat  (None, 1, 1,   0       ['conv5_block25_conca  N          \n  (Concatenate)       1728)                   t[0][0]',                         \n                                               'conv5_block26_2_con             \n                                              v[0][0]']                         \n conv5_block27_0_bn (  (None, 1, 1,   6912    ['conv5_block26_conca  N          \n BatchNormalization)  1728)                   t[0][0]']                         \n conv5_block27_0_relu  (None, 1, 1,   0       ['conv5_block27_0_bn[  N          \n  (Activation)        1728)                   0][0]']                           \n conv5_block27_1_conv  (None, 1, 1,   221184  ['conv5_block27_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block27_1_bn (  (None, 1, 1,   512     ['conv5_block27_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block27_1_relu  (None, 1, 1,   0       ['conv5_block27_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block27_2_conv  (None, 1, 1,   36864   ['conv5_block27_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block27_concat  (None, 1, 1,   0       ['conv5_block26_conca  N          \n  (Concatenate)       1760)                   t[0][0]',                         \n                                               'conv5_block27_2_con             \n                                              v[0][0]']                         \n conv5_block28_0_bn (  (None, 1, 1,   7040    ['conv5_block27_conca  N          \n BatchNormalization)  1760)                   t[0][0]']                         \n conv5_block28_0_relu  (None, 1, 1,   0       ['conv5_block28_0_bn[  N          \n  (Activation)        1760)                   0][0]']                           \n conv5_block28_1_conv  (None, 1, 1,   225280  ['conv5_block28_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block28_1_bn (  (None, 1, 1,   512     ['conv5_block28_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block28_1_relu  (None, 1, 1,   0       ['conv5_block28_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block28_2_conv  (None, 1, 1,   36864   ['conv5_block28_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block28_concat  (None, 1, 1,   0       ['conv5_block27_conca  N          \n  (Concatenate)       1792)                   t[0][0]',                         \n                                               'conv5_block28_2_con             \n                                              v[0][0]']                         \n conv5_block29_0_bn (  (None, 1, 1,   7168    ['conv5_block28_conca  N          \n BatchNormalization)  1792)                   t[0][0]']                         \n conv5_block29_0_relu  (None, 1, 1,   0       ['conv5_block29_0_bn[  N          \n  (Activation)        1792)                   0][0]']                           \n conv5_block29_1_conv  (None, 1, 1,   229376  ['conv5_block29_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block29_1_bn (  (None, 1, 1,   512     ['conv5_block29_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block29_1_relu  (None, 1, 1,   0       ['conv5_block29_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block29_2_conv  (None, 1, 1,   36864   ['conv5_block29_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block29_concat  (None, 1, 1,   0       ['conv5_block28_conca  N          \n  (Concatenate)       1824)                   t[0][0]',                         \n                                               'conv5_block29_2_con             \n                                              v[0][0]']                         \n conv5_block30_0_bn (  (None, 1, 1,   7296    ['conv5_block29_conca  N          \n BatchNormalization)  1824)                   t[0][0]']                         \n conv5_block30_0_relu  (None, 1, 1,   0       ['conv5_block30_0_bn[  N          \n  (Activation)        1824)                   0][0]']                           \n conv5_block30_1_conv  (None, 1, 1,   233472  ['conv5_block30_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block30_1_bn (  (None, 1, 1,   512     ['conv5_block30_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block30_1_relu  (None, 1, 1,   0       ['conv5_block30_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block30_2_conv  (None, 1, 1,   36864   ['conv5_block30_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block30_concat  (None, 1, 1,   0       ['conv5_block29_conca  N          \n  (Concatenate)       1856)                   t[0][0]',                         \n                                               'conv5_block30_2_con             \n                                              v[0][0]']                         \n conv5_block31_0_bn (  (None, 1, 1,   7424    ['conv5_block30_conca  N          \n BatchNormalization)  1856)                   t[0][0]']                         \n conv5_block31_0_relu  (None, 1, 1,   0       ['conv5_block31_0_bn[  N          \n  (Activation)        1856)                   0][0]']                           \n conv5_block31_1_conv  (None, 1, 1,   237568  ['conv5_block31_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block31_1_bn (  (None, 1, 1,   512     ['conv5_block31_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block31_1_relu  (None, 1, 1,   0       ['conv5_block31_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block31_2_conv  (None, 1, 1,   36864   ['conv5_block31_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block31_concat  (None, 1, 1,   0       ['conv5_block30_conca  N          \n  (Concatenate)       1888)                   t[0][0]',                         \n                                               'conv5_block31_2_con             \n                                              v[0][0]']                         \n conv5_block32_0_bn (  (None, 1, 1,   7552    ['conv5_block31_conca  N          \n BatchNormalization)  1888)                   t[0][0]']                         \n conv5_block32_0_relu  (None, 1, 1,   0       ['conv5_block32_0_bn[  N          \n  (Activation)        1888)                   0][0]']                           \n conv5_block32_1_conv  (None, 1, 1,   241664  ['conv5_block32_0_rel  N          \n  (Conv2D)            128)                    u[0][0]']                         \n conv5_block32_1_bn (  (None, 1, 1,   512     ['conv5_block32_1_con  N          \n BatchNormalization)  128)                    v[0][0]']                         \n conv5_block32_1_relu  (None, 1, 1,   0       ['conv5_block32_1_bn[  N          \n  (Activation)        128)                    0][0]']                           \n conv5_block32_2_conv  (None, 1, 1,   36864   ['conv5_block32_1_rel  N          \n  (Conv2D)            32)                     u[0][0]']                         \n conv5_block32_concat  (None, 1, 1,   0       ['conv5_block31_conca  N          \n  (Concatenate)       1920)                   t[0][0]',                         \n                                               'conv5_block32_2_con             \n                                              v[0][0]']                         \n bn (BatchNormalizati  (None, 1, 1,   7680    ['conv5_block32_conca  N          \n on)                  1920)                   t[0][0]']                         \n relu (Activation)    (None, 1, 1,   0        ['bn[0][0]']           N          \n                      1920)                                                     \n dense_3 (Dense)      (None, 1, 1,   19210    ['relu[0][0]']         N          \n                      10)                                                       \n flatten_2 (Flatten)  (None, 10)     0        ['dense_3[0][0]']      Y          \n================================================================================\nTotal params: 18,341,194\nTrainable params: 0\nNon-trainable params: 18,341,194\n________________________________________________________________________________\n```\n:::\n:::\n\n\nAnd then the usual training:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tensorflow)\nlibrary(keras)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\nmodel %>%\n  keras::compile(loss = loss_categorical_crossentropy, \n                 optimizer = optimizer_adamax())\n\nmodel %>%\n  fit(\n    x = train_x, \n    y = train_y,\n    epochs = 1L,\n    batch_size = 32L,\n    shuffle = TRUE,\n    validation_split = 0.2\n  )\n```\n:::\n\n\nWe have seen, that transfer learning can easily be done using Keras.\n\n## Torch\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(torchvision)\nlibrary(torch)\ntorch_manual_seed(321L)\nset.seed(123)\n\ntrain_ds = cifar10_dataset(\".\", download = TRUE, train = TRUE,\n                           transform = transform_to_tensor)\ntest_ds = cifar10_dataset(\".\", download = TRUE, train = FALSE,\n                          transform = transform_to_tensor)\n\ntrain_dl = dataloader(train_ds, batch_size = 100L, shuffle = TRUE)\ntest_dl = dataloader(test_ds, batch_size = 100L)\n\nmodel_torch = model_resnet18(pretrained = TRUE)\n\n# We will set all model parameters to constant values:\nmodel_torch$parameters %>%\n  purrr::walk(function(param) param$requires_grad_(FALSE))\n\n# Let's replace the last layer (last layer is named 'fc') with our own layer:\ninFeat = model_torch$fc$in_features\nmodel_torch$fc = nn_linear(inFeat, out_features = 10L)\n\nopt = optim_adam(params = model_torch$parameters, lr = 0.01)\n\nfor(e in 1:1){\n  losses = c()\n  coro::loop(\n    for(batch in train_dl){\n      opt$zero_grad()\n      pred = model_torch(batch[[1]])\n      loss = nnf_cross_entropy(pred, batch[[2]], reduction = \"mean\")\n      loss$backward()\n      opt$step()\n      losses = c(losses, loss$item())\n    }\n  )\n  \n  cat(sprintf(\"Loss at epoch %d: %3f\\n\", e, mean(losses)))\n}\n\nmodel_torch$eval()\n\ntest_losses = c()\ntotal = 0\ncorrect = 0\n\ncoro::loop(\n  for(batch in test_dl){\n    output = model_torch(batch[[1]])\n    labels = batch[[2]]\n    loss = nnf_cross_entropy(output, labels)\n    test_losses = c(test_losses, loss$item())\n    predicted = torch_max(output$data(), dim = 2)[[2]]\n    total = total + labels$size(1)\n    correct = correct + (predicted == labels)$sum()$item()\n  }\n)\n\ntest_accuracy =  correct/total\nprint(test_accuracy)\n```\n:::\n\n:::\n\n### Example: Flower dataset\n\nLet's do that with our flower data set:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(keras)\nlibrary(tensorflow)\nset_random_seed(321L, disable_gpu = FALSE)\t# Already sets R's random seed.\n\ndata = EcoData::dataset_flower()\ntrain = data$train/127.5 - 1\ntest = data$test/127.5 - 1\nlabels = data$labels\n\ndensenet = keras::application_efficientnet_b1(include_top = FALSE,\n                                          input_shape = list(80L, 80L, 3L))\n\nkeras::freeze_weights(densenet)\n\nmodel = keras_model(inputs = densenet$input, \n                    outputs = densenet$output %>%\n                      layer_flatten() %>%\n                      layer_dropout(0.2) %>%\n                      layer_dense(units = 200L) %>%\n                      layer_dropout(0.2) %>%\n                      layer_dense(units = 5L, activation = \"softmax\"))\n\n\n\n\n# Data augmentation.\naug = image_data_generator(rotation_range = 180, zoom_range = 0.4,\n                           width_shift_range = 0.2, height_shift_range = 0.2,\n                           vertical_flip = TRUE, horizontal_flip = TRUE)\n\n\n# Data preparation / splitting.\nindices = sample.int(nrow(train), 0.1 * nrow(train))\ngenerator = flow_images_from_data(train[-indices,,,],\n                                  k_one_hot(labels[-indices], num_classes = 5L), \n                                  batch_size = 25L, shuffle = TRUE,\n                                  generator = aug)\n\n\ntest = (train[indices,,,])\ntest_labels = k_one_hot(labels[indices], num_classes = 5L)\n\n\n## Training loop with early stopping:\n\n# As we use an iterator (the generator), validation loss is not applicable.\n# An available metric is the normal loss.\nearly = keras::callback_early_stopping(patience = 5L, monitor = \"loss\")\n\n\nmodel %>%\n  keras::compile(loss = loss_categorical_crossentropy,\n                 optimizer = keras::optimizer_rmsprop(learning_rate = 0.0005))\n\nmodel %>%\n  fit(generator, epochs = 8L, batch_size = 45L,steps_per_epoch = floor(nrow(train)/45),\n      shuffle = TRUE, callbacks = c(early), validation_data = list(test, test_labels))\n\npred = predict(model, imagenet_preprocess_input(data$test))\npred = apply(pred, 1, which.max) - 1\n```\n:::\n",
    "supporting": [
      "C3-ConvolutionalNeuralNetworks_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}